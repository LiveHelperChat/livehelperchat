{"version":3,"file":"6151177523bebde7cdd5.js","mappings":"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","sources":["webpack://LiveHelperChat/./src/util/nodeJSChat.js"],"sourcesContent":["import {helperFunctions} from '../lib/helperFunctions';\n\nclass _nodeJSChat {\n\n    constructor() {\n        this.params = {};\n        this.attributes = null;\n        this.chatEvents = null;\n    }\n\n    async setParams(params, attributes, chatEvents) {\n        this.params = params;\n        this.attributes = attributes;\n        this.chatEvents = chatEvents;\n\n        const vid = this.attributes.userSession.getVID();\n\n        var socketOptions = {\n            protocolVersion: 1,\n            hostname: params.hostname,\n            path: params.path,\n            authTokenName: 'socketCluster.authToken_vi'\n        }\n\n        if (params.port != '') {\n            socketOptions.port = parseInt(params.port);\n        }\n\n        if (params.secure == 1) {\n            socketOptions.secure = true;\n        }\n\n        var socketCluster = require(\"socketcluster-client\");\n\n        var socket = socketCluster.create(socketOptions);\n\n        var chanelName = 'uo_' + vid;\n        var instance_id = this.attributes.instance_id;\n        var sampleChannel = null;\n\n        let status = await socket.listener('connect').once();\n        if (status.isAuthenticated) {\n            connectSiteVisitor();\n            attributes.LHC_API.args.check_messages = false;\n        } else {\n            authentificate();\n        }\n\n        try {\n            for await (let event of socket.listener('deauthenticate')) {\n                authentificate();\n            }\n        } catch (e) {\n            // shut up old browers\n        }\n\n\n        function authentificate() {\n            helperFunctions.makeRequest(attributes.LHC_API.args.lhc_base_url + attributes['lang'] + \"nodejshelper/tokenvisitor\", { params: {ts: (new Date()).getTime()}}, async (data) => {\n                instance_id = data.instance_id;\n                await Promise.all([\n                    socket.invoke('login',{hash: data.hash, chanelName: chanelName, instance_id: data.instance_id}),\n                    socket.listener('authenticate').once()\n                ]);\n                connectSiteVisitor();\n            })\n        }\n\n        async function connectSiteVisitor() {\n            var firstRun = sampleChannel == null;\n            sampleChannel = socket.subscribe('uo_' + vid);\n            if (firstRun == true) {\n                try {\n                    for await (let op of sampleChannel) {\n                        if (op.op == 'check_message') {\n                            attributes.eventEmitter.emitEvent('checkMessageOperator');\n                        } else if (op.op == 'is_online') {\n                            socket.transmitPublish('ous_'+instance_id,{op:'vi_online', status: true, vid: vid});\n                        }\n                    }\n                } catch (e){\n                    // shut up old browsers\n                }\n            }\n        }\n\n    }\n}\n\nconst nodeJSChat = new _nodeJSChat();\nexport {nodeJSChat};\n\n"],"names":["_nodeJSChat","_createClass","_classCallCheck","this","params","attributes","chatEvents","key","value","_setParams","_asyncToGenerator","_regeneratorRuntime","_callee3","vid","socketOptions","socketCluster","socket","chanelName","instance_id","sampleChannel","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","authentificate","connectSiteVisitor","_connectSiteVisitor","_context3","prev","next","_callee2","firstRun","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","op","_context2","subscribe","_asyncIterator","sent","done","eventEmitter","emitEvent","transmitPublish","status","t0","return","finish","t1","stop","apply","arguments","helperFunctions","makeRequest","LHC_API","args","lhc_base_url","ts","Date","getTime","_ref","_callee","data","_context","Promise","all","invoke","hash","listener","once","_x4","userSession","getVID","protocolVersion","hostname","path","authTokenName","port","parseInt","secure","require","create","isAuthenticated","check_messages","_x","_x2","_x3","nodeJSChat"],"sourceRoot":""}