{"version":3,"sources":["bc121faf728bd0ec510ab61cdf2061fb.js"],"names":["lhcAppControllers","controller","$scope","$http","$location","$rootScope","$log","$window","this","combinations","that","makeid","length","text","possible","i","charAt","Math","floor","random","setConditions","deleteElement","element","list","confirm","splice","indexOf","move","offset","index","newIndex","removedElement","addCombination","push","conditions","value","dep_id","priority","addCondition","items","field","logic","moveUp","moveDown"],"mappings":"AAAAA,kBAAkBC,WAAW,oBAAoB,CAAC,SAAS,QAAQ,YAAY,aAAc,OAAO,UAAW,SAASC,EAAQC,EAAOC,EAAWC,EAAYC,EAAMC,GACpKC,KAAKC,aAAe,GACpB,IAAIC,EAAOF,KACXA,KAAKG,OAAS,SAASC,GAGvB,IAFA,IAAIC,EAAO,GACPC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IAC5BF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAC5D,OAAOC,GAEPL,KAAKY,cAAgB,WACrBZ,KAAKC,aAAeF,EAA2B,mBAE/CC,KAAKa,cAAgB,SAAUC,EAAQC,GACnCC,QAAQ,kBACZD,EAAKE,OAAOF,EAAKG,QAAQJ,GAAU,IAGnCd,KAAKmB,KAAO,SAASL,EAASC,EAAMK,GACpCC,MAAQN,EAAKG,QAAQJ,GACrBQ,SAAWD,MAAQD,EACfE,UAAY,GAAKA,SAAWP,EAAKX,SACrCmB,eAAiBR,EAAKE,OAAOI,MAAO,GAAG,GACvCN,EAAKE,OAAOK,SAAU,EAAGC,kBAGzBvB,KAAKwB,eAAiB,WACtBtB,EAAKD,aAAawB,KAAK,CACvBC,WAAe,GACfC,MAAU,GACVC,OAAU,IACVC,SAAa,KAGb7B,KAAK8B,aAAe,SAASC,GAC7BA,EAAML,WAAWD,KAAK,CAACO,MAAM,GAAIC,MAAO,SAExCjC,KAAKkC,OAAS,SAASF,EAAMjB,GAC7Bb,EAAKiB,KAAKa,EAAMjB,GAAM,IAEtBf,KAAKmC,SAAW,SAASH,EAAMjB,GAC/Bb,EAAKiB,KAAKa,EAAMjB,EAAK","file":"bc121faf728bd0ec510ab61cdf2061fb.js","sourcesContent":["lhcAppControllers.controller('CannedReplaceCtrl',['$scope','$http','$location','$rootScope', '$log','$window', function($scope, $http, $location, $rootScope, $log, $window) {\nthis.combinations = [];\nvar that = this;\nthis.makeid = function(length) {\nvar text = \"\";\nvar possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nfor (var i = 0; i < length; i++)\ntext += possible.charAt(Math.floor(Math.random() * possible.length));\nreturn text;\n}\nthis.setConditions = function() {\nthis.combinations = $window['replaceConditions'];\n}\nthis.deleteElement = function (element,list) {\nif (confirm('Are you sure?')){\nlist.splice(list.indexOf(element), 1);\n}\n}\nthis.move = function(element, list, offset) {\nindex = list.indexOf(element);\nnewIndex = index + offset;\nif (newIndex > -1 && newIndex < list.length){\nremovedElement = list.splice(index, 1)[0];\nlist.splice(newIndex, 0, removedElement)\n}\n};\nthis.addCombination = function() {\nthat.combinations.push({\n'conditions' : [],\n'value' : '',\n'dep_id': \"0\",\n'priority' : 0,\n});\n};\nthis.addCondition = function(items) {\nitems.conditions.push({field:\"\", logic: \"and\"});\n}\nthis.moveUp = function(field,list) {\nthat.move(field,list,-1);\n}\nthis.moveDown = function(field,list) {\nthat.move(field,list,1);\n}\n}]);\n"]}