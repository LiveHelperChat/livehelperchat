{"version":3,"file":"c76977fbe30e267c224152921b536aca.js","names":["LHCOperatorNotifications","e","i","public_key","navigator","window","serviceWorker","register","WWW_DIR_JAVASCRIPT","then","installing","console","log","waiting","active","pushManager","getSubscription","o","document","getElementById","addEventListener","async","userVisibleOnly","applicationServerKey","n","subscribe","fetch","method","headers","body","JSON","stringify","credentials","t","alert","message","text","innerHTML","lhinst","protectCSFR","catch","error","repeat","length","replace","atob","Uint8Array","charCodeAt"],"sources":["c76977fbe30e267c224152921b536aca.js"],"mappings":"AAAA,IAAIA,yBAAyB,SAASC,GAAG,MAAMC,EAAED,EAAEE,WAAW,GAAG,kBAAkBC,WAAW,gBAAgBC,OAAO,CAAC,IAAIJ,EAAEG,UAAUE,cAAcC,SAASC,mBAAmB,iCAAiCC,MAAMP,IAAIA,EAAEQ,WAAWC,QAAQC,IAAI,6BAA6BV,EAAEW,QAAQF,QAAQC,IAAI,4BAA4BV,EAAEY,QAAQH,QAAQC,IAAI,yBAAyBD,QAAQC,IAAI,6BAA6BX,EAAEC,EAAEA,EAAEa,YAAYC,qBAAqBP,MAAMQ,IAAIC,SAASC,eAAe,wBAAwBC,iBAAiB,SAAQ,MAAOC,eAAepB,GAAG,MAAMgB,EAAE,CAACK,iBAAgB,EAAGC,qBAAqBC,EAAEtB,IAAI,IAAI,MAAMA,QAAQD,EAAEc,YAAYU,UAAUR,SAASS,MAAMlB,mBAAmB,4BAA4B,CAACmB,OAAO,OAAOC,QAAQ,CAAC,eAAe,oBAAoBC,KAAKC,KAAKC,UAAU7B,GAAG8B,YAAY,gBAAgBC,GAAG,CAAC,MAAMhC,GAAGU,QAAQC,IAAIX,GAAGiC,MAAM,wBAAwBjC,EAAEkC,QAAQ,CAAC,CAApWd,CAAsWpB,EAAG,GAAG,GAAE,CAAC,SAASgC,IAAIP,MAAMlB,mBAAmB,kCAAkC,CAACmB,OAAO,MAAMK,YAAY,gBAAgBvB,MAAMR,GAAGA,EAAEmC,SAAS3B,MAAMR,IAAIiB,SAASC,eAAe,iBAAiBkB,UAAUpC,EAAEqC,OAAOC,aAAc,IAAGC,OAAOvC,IAAIU,QAAQ8B,MAAM,+BAA+BxC,EAAG,GAAE,CAAC,SAASuB,EAAEvB,GAAG,MAAMC,GAAGD,EAAE,IAAIyC,QAAQ,EAAEzC,EAAE0C,OAAO,GAAG,IAAIC,QAAQ,MAAM,KAAKA,QAAQ,KAAK,KAAKX,EAAE5B,OAAOwC,KAAK3C,GAAGsB,EAAE,IAAIsB,WAAWb,EAAEU,QAAQ,IAAI,IAAI1C,EAAE,EAAEA,EAAEgC,EAAEU,SAAS1C,EAAEuB,EAAEvB,GAAGgC,EAAEc,WAAW9C,GAAG,OAAOuB,CAAC,CAACS,GAAG","ignoreList":[],"sourcesContent":["var LHCOperatorNotifications=function(e){const i=e.public_key;if(\"serviceWorker\"in navigator&&\"PushManager\"in window){let e;navigator.serviceWorker.register(WWW_DIR_JAVASCRIPT+\"notifications/serviceworkerop\").then((i=>(i.installing?console.log(\"Service worker installing\"):i.waiting?console.log(\"Service worker installed\"):i.active&&console.log(\"Service worker active\"),console.log(\"Service Worker registered\"),e=i,i.pushManager.getSubscription()))).then((o=>{document.getElementById(\"subscribe-persistent\").addEventListener(\"click\",(()=>{!async function(e){const o={userVisibleOnly:!0,applicationServerKey:n(i)};try{const i=await e.pushManager.subscribe(o);await fetch(WWW_DIR_JAVASCRIPT+\"notifications/subscribeop\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(i),credentials:\"same-origin\"}),t()}catch(e){console.log(e),alert(\"Subscription failed: \"+e.message)}}(e)}))}))}function t(){fetch(WWW_DIR_JAVASCRIPT+\"notifications/loadsubscriptions\",{method:\"GET\",credentials:\"same-origin\"}).then((e=>e.text())).then((e=>{document.getElementById(\"subscriptions\").innerHTML=e,lhinst.protectCSFR()})).catch((e=>{console.error(\"Error loading subscriptions:\",e)}))}function n(e){const i=(e+\"=\".repeat((4-e.length%4)%4)).replace(/\\-/g,\"+\").replace(/_/g,\"/\"),t=window.atob(i),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n[e]=t.charCodeAt(e);return n}t()};\n"]}