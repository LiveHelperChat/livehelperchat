{"version":3,"file":"605.0dc446186fe61c6bc6e2.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/parts/GroupChatMessage.js","webpack://LHCReactAPPAdmin/./src/components/lib/groupChatSync.js","webpack://LHCReactAPPAdmin/./src/components/GroupChat.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js"],"sourcesContent":["import parse, { domToReact } from 'html-react-parser';\nimport React from \"react\";\n\nconst GroupChatMessage = ({message, index}) => {\n\n    var operatorChanged = false;\n\n    return parse(message['msg'], {\n\n        replace: domNode => {\n            if (domNode.attribs) {\n\n                var cloneAttr = Object.assign({}, domNode.attribs);\n\n                if (domNode.attribs.class) {\n                    domNode.attribs.className = domNode.attribs.class;\n\n                    // Animate only if it's not first sync call\n                    if (domNode.attribs.className.indexOf('message-row') !== -1 && index > 0) {\n                        domNode.attribs.className += ' fade-in-fast';\n                        if (message['msop'] > 0 && message['msop'] != message['lmsop'] && operatorChanged == false) {\n                            domNode.attribs.className += ' operator-changes';\n                            operatorChanged = true;\n                        }\n                    }\n\n                    delete domNode.attribs.class;\n                }\n\n                if (domNode.attribs.onclick) {\n                    delete domNode.attribs.onclick;\n                }\n\n                if (domNode.name && domNode.name === 'img') {\n                    return <img {...domNode.attribs} />\n                } else if (domNode.name && domNode.name === 'a') {\n                    if (cloneAttr.onclick) {\n                        return <a {...domNode.attribs}  >{domToReact(domNode.children)}</a>\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport default React.memo(GroupChatMessage);","import axios from \"axios\";\n\nclass _groupChatSync {\n\n    constructor() {\n        this.eventEmitter = new EventEmitter();\n        this.chatsSynchro = [];\n        this.chatsSynchroMsg = [];\n        this.timeoutSync = null;\n        this.syncInProgress = false;\n        this.fetchStatus = false;\n    }\n\n    setFetchStatus(status) {\n        this.fetchStatus = status;\n    }\n\n    sync() {\n        if (this.syncInProgress == true) {return;}\n\n        this.syncInProgress = true;\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/sync\" + (this.fetchStatus == true ? '/(opt)/status' : ''), this.chatsSynchroMsg).then(result => {\n\n            this.fetchStatus = false;\n\n            let groupedData = [];\n\n            result.data.result.forEach((chatData) => {\n                if (!groupedData[chatData.chat_id]) {\n                    groupedData[chatData.chat_id] = {};\n                }\n\n                groupedData[chatData.chat_id][\"msg\"] = chatData;\n\n                let index = this.chatsSynchro.indexOf(chatData.chat_id);\n                let parts = this.chatsSynchroMsg[index].split(\",\");\n                parts[1] = chatData.message_id;\n\n                this.chatsSynchroMsg[index] = parts.join(\",\");\n            });\n\n            result.data.result_status.forEach((chatData) => {\n                if (!groupedData[chatData.chat_id]) {\n                    groupedData[chatData.chat_id] = {};\n                }\n\n                groupedData[chatData.chat_id][\"status\"] = chatData;\n\n                let index = this.chatsSynchro.indexOf(chatData.chat_id);\n                let parts = this.chatsSynchroMsg[index].split(\",\");\n                parts[2] = chatData.lgsync;\n\n                this.chatsSynchroMsg[index] = parts.join(\",\");\n            })\n\n            groupedData.forEach((chatData, chatId) => {\n                this.eventEmitter.emitEvent('gchat_'+chatId, [chatData]);\n            });\n\n            this.syncInProgress = false;\n        });\n    }\n\n    startSync() {\n        clearTimeout(this.timeoutSync);\n        if (this.chatsSynchro.length > 0) {\n            this.timeoutSync = setInterval(() => { this.sync(); }, 2500);\n        }\n    }\n\n    addSubscriber(chatId, cb) {\n        this.chatsSynchro.push(parseInt(chatId));\n        this.chatsSynchroMsg.push(chatId+\",0,0\");\n        this.eventEmitter.addListener('gchat_'+chatId, cb);\n        this.startSync();\n    }\n\n    removeSubscriber(chatId, cb) {\n        var index = this.chatsSynchro.indexOf(parseInt(chatId));\n        if (index !== -1) {\n            this.chatsSynchro.splice(index, 1);\n            this.chatsSynchroMsg.splice(index, 1);\n            this.eventEmitter.removeListener('gchat_'+chatId, cb);\n            this.startSync();\n        }\n    }\n};\n\nconst groupChatSync = new _groupChatSync();\nexport { groupChatSync };","//https://medium.com/@MilkMan/read-this-before-refactoring-your-big-react-class-components-to-hooks-515437e9d96f\n//https://reactjs.org/docs/hooks-reference.html#usereducer\n\nimport React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport GroupChatMessage from \"./parts/GroupChatMessage\";\nimport useInterval from \"./lib/useInterval\";\nimport {groupChatSync} from \"./lib/groupChatSync\";\nimport {useTranslation} from 'react-i18next';\n\naxios.defaults.headers.common['X-CSRFToken'] = confLH.csrf_token;\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'increment':\n            return {count: state.count + 1};\n        case 'decrement':\n            return {count: state.count - 1};\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n        case 'update_messages': {\n\n            // Set last operator from previous state\n            action.messages['lmsop'] = state.lmsop || action.value.lmsop;\n\n            // Update state\n            state = { ...state, ...action.value };\n\n            // Update message\n            state.messages.push(action.messages);\n\n            return state;\n        }\n        case 'update_history': {\n            state = { ...state, ...action.value };\n            if (action.history.msg != '') {\n                state.messages.unshift(action.history);\n            }\n            return state;\n        }\n        case 'init':\n            return {count: state.count - 1};\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst GroupChat = props => {\n\n    const messageElement = useRef(null);\n    const messagesElement = useRef(null);\n    const tabsContainer = useRef(null);\n    const searchOperatorElement = useRef(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n        messages: [],\n        operators: [],\n        supervistors: [],\n        operators_invite: [],\n        chat: {},\n        has_more_messages: false,\n        old_message_id: 0,\n        last_message: '',\n        error: '',\n        last_message_id: 0,\n        lmsop: 0,\n        lgsync: 0\n    });\n\n    const loadMainData = () => {\n        return axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/\" + (props.chatPublicId ? 'loadpublichat' : 'loadgroupchat') + \"/\" + (props.chatPublicId || props.chatId));\n    }\n\n    const loadPrevious = () => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/loadpreviousmessages/\" + props.chatId+'/'+state.old_message_id).then(result => {\n            dispatch({\n                type: 'update_history',\n                value: {\n                    'has_more_messages' : result.data.has_messages,\n                    'old_message_id' : result.data.message_id\n                },\n                history: {\n                    \"msg\" : result.data.result,\n                    \"msop\" : result.data.msop,\n                    \"lmsop\" : result.data.lmsop\n                }\n            });\n        });\n    }\n\n    const startChatWithOperator = (operator) => {\n        ee.emitEvent('angularStartChatOperatorPublic',[operator.user_id]);\n    }\n\n    const setUnreadSupportChat = (chat_id, length) => {\n        var tab = document.getElementById('chat-tab-link-'+chat_id);\n        var whoisHot,hotSet = false;\n        if (tab !== null && length > 1 && !tab.classList.contains('active') && (whoisHot = tab.querySelector('.whatshot')) !== null) {\n            whoisHot.classList.remove(\"d-none\");\n            ee.emitEvent('supportUnreadChat', [{id:chat_id,unread:true}]);\n            playSoundMessage();\n            hotSet = true;\n        }\n\n        if (hotSet == false) {\n            tab = document.getElementById('private-chat-tab-link-'+chat_id);\n            if (tab !== null && length > 1 && !tab.classList.contains('active') && (whoisHot = tab.querySelector('.whatshot')) !== null) {\n                whoisHot.classList.remove(\"d-none\");\n                playSoundMessage();\n            }\n        }\n    }\n\n    const playSoundMessage = () => {\n        lhinst.playNewMessageSound();\n    }\n\n    useEffect(() => {\n        messagesElement.current.scrollTop = messagesElement.current.scrollHeight;\n\n        if (!props.chatPublicId) {\n            var tab = document.getElementById('chat-tab-link-gc'+props.chatId);\n            if (tab && state.messages.length > 1 && !tab.classList.contains('active')) {\n                tab.querySelector('.whatshot').classList.remove(\"d-none\");\n                playSoundMessage();\n            }\n        } else {\n            setUnreadSupportChat(props.chatPublicId, state.messages.length);\n        }\n\n    },[state.messages.length]);\n\n    const rememberChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('gachat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) === -1){\n                    achat_id_array.push(chatId);\n                    localStorage.setItem('gachat_id',achat_id_array.join(','));\n                }\n\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const leaveGroup = () => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/leave/\" + props.chatId).then(result => {\n            lhinst.removeDialogTabGroup('gc'+props.chatId,$('#tabs'),true)\n        });\n    }\n\n    var searchTimeout = null\n    const searchOpeartors = () => {\n        clearTimeout(searchTimeout);\n        searchTimeout = setTimeout(() => {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/searchoperator/\"+props.chatId+\"?\"+(props.chatPublicId ? \"id=\"+props.chatPublicId+\"&\" : '')+\"q=\" + escape(searchOperatorElement.current.value)).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"operators_invite\" : result.data\n                    }\n                });\n            });\n        },200);\n    }\n\n    const cancelSearch = () => {\n        dispatch({\n            type: 'update',\n            value: {\n                \"operators_invite\" : []\n            }\n        });\n    }\n\n    const forgetChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('gachat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) !== -1) {\n                    achat_id_array.splice(achat_id_array.indexOf(chatId),1);\n                }\n\n                localStorage.setItem('gachat_id',achat_id_array.join(','));\n            } catch(e) {\n\n            }\n        }\n    }\n\n    useEffect(() => {\n\n        const chatSynced = (e) => {\n            if (e.msg) {\n                dispatch({\n                    type: 'update_messages',\n                    messages : {\n                        'msg':e.msg.content,\n                        'msop': e.msg.msop,\n                    },\n                    value: {\n                        'last_message_id' : e.msg.message_id,\n                        'lmsop': e.msg.lmsop\n                    }\n                });\n            }\n\n            if (e.status) {\n                let valueUpdate = {\n                    'operators': e.status.operators,\n                    'lgsync': e.status.lgsync\n                };\n\n                if (e.status.old_message_id) {\n                    valueUpdate['has_more_messages'] = e.status.has_more_messages;\n                    valueUpdate['old_message_id'] = e.status.old_message_id;\n                }\n\n                dispatch({\n                    type: 'update',\n                    value: valueUpdate\n                });\n            }\n        }\n\n        const subTabClicked = (e) => {\n            tabClicked(props.chatPublicId, null, true);\n        }\n\n        loadMainData().then(result => {\n\n            if (!props.chatPublicId) {\n                rememberChat(props.chatId);\n            } else {\n                var div = document.createElement('div');\n                div.innerHTML = \"<i class=\\\"whatshot blink-ani d-none text-warning material-icons\\\">whatshot</i>\";\n                document.getElementById('chat-tab-link-'+props.chatPublicId).prepend(div.firstChild);\n                document.getElementById('private-chat-tab-link-'+props.chatPublicId).addEventListener('click',subTabClicked);\n             }\n\n            var subTab = document.getElementById('private-chat-tab-link-'+props.chatPublicId);\n\n            if ((props.paramsStart && props.paramsStart.unread) || (subTab !== null && subTab.getAttribute('data-unread') == 'true')) {\n                setUnreadSupportChat(props.chatPublicId,2);\n            }\n\n            if (props.paramsStart && props.paramsStart.default_message && messageElement.current !== null) {\n                messageElement.current.focus();\n                messageElement.current.value = '[quote]'+props.paramsStart.default_message+'[/quote]'+\"\\n\";\n            }\n\n            props.chatId = String(result.data.chat.id);\n            groupChatSync.addSubscriber(props.chatId, chatSynced);\n            groupChatSync.sync();\n\n            if (!props.chatPublicId){\n                var container = tabsContainer.current;\n                var bsn = require(\"bootstrap.native/dist/bootstrap-native-v4\");\n                var tabs = container.querySelectorAll('[data-bs-toggle=\"tab\"]');\n\n                if (tabs.length > 0) {\n                    Array.prototype.forEach.call(tabs, function(element){ new bsn.Tab( element) });\n                }\n            }\n\n            dispatch({\n                type: 'update',\n                value: {\n                    'chat': result.data.chat,\n                    'supervisors': result.data.supervisors || []\n                }\n            });\n\n        }).catch((error) => {\n           !props.chatPublicId && lhinst.removeDialogTabGroup('gc'+props.chatId,$('#tabs'),true);\n            if (error.response && error.response.data && error.response.data.error) {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"error\" : error.response.data.error\n                    }\n                });\n            }\n        })\n\n        const tabClicked = (e, elm, forceFocus) => {\n            if ((props.chatPublicId && e == props.chatPublicId) || (!props.chatPublicId && e == props.chatId)) {\n\n                if (messagesElement.current !== null){\n                    setTimeout(() => {\n                        if (messagesElement.current !== null){\n                            (!props.chatPublicId || forceFocus) && messageElement.current.focus();\n                            if (messagesElement.current.scrollHeight - (messagesElement.current.scrollTop + messagesElement.current.offsetHeight) < (messagesElement.current.offsetHeight - 50)) {\n                                messagesElement.current.scrollTop = messagesElement.current.scrollHeight;\n                            }\n                        }\n                    },2);\n                }\n\n                var tab = document.getElementById(!props.chatPublicId ? 'chat-tab-link-gc'+props.chatId : 'chat-tab-link-'+props.chatPublicId);\n\n                if (tab !== null) {\n                    var tabHot = tab.querySelector('.whatshot');\n                    if (tabHot !== null && !tabHot.classList.contains(\"d-none\")) {\n                        tabHot.classList.add(\"d-none\");\n                        // Activate private chat subtab if it was pending\n                        if (props.chatPublicId) {\n                            document.getElementById('private-chat-tab-link-'+props.chatPublicId).click();\n                        }\n                    }\n                }\n\n                if (props.chatPublicId){\n                    var tab = document.getElementById('private-chat-tab-link-'+props.chatPublicId);\n                    if (tab !== null) {\n                        var tabHot = tab.querySelector('.whatshot');\n                        if (tabHot !== null && !tabHot.classList.contains(\"d-none\")) {\n                            tabHot.classList.add(\"d-none\");\n                        }\n                    }\n                }\n            }\n        }\n\n        const prefillMessage = (chatId, message) => {\n            if (props.chatPublicId && chatId == props.chatPublicId) {\n                if (messageElement && messageElement.current) {\n                    messageElement.current.value = '[quote]'+message+'[/quote]'+\"\\n\";\n                    messageElement.current.focus();\n                }\n            }\n        }\n\n        if (props.chatPublicId){\n            ee.addListener('groupChatPrefillMessage',prefillMessage);\n        }\n\n        ee.addListener((!props.chatPublicId ? 'groupChatTabClicked' : 'chatTabClicked'),tabClicked)\n\n        !props.chatPublicId && messageElement.current.focus();\n\n        return function cleanup() {\n\n            forgetChat(props.chatId)\n\n            if (!props.chatPublicId) {\n                ee.removeListener('groupChatTabClicked',tabClicked);\n            } else {\n                ee.removeListener('chatTabClicked',tabClicked);\n                ee.removeListener('prefillMessage',prefillMessage);\n            }\n\n            groupChatSync.removeSubscriber(props.chatId, chatSynced);\n        };\n    },[]);\n\n    const addMessage = (e, doSearch) => {\n        if (e.keyCode == 13) {\n\n            axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/addmessage/\" + props.chatId,{msg: messageElement.current.value}).then(result => {\n                if (result.data.result.indexOf('status') !== -1) {\n                    groupChatSync.setFetchStatus(true);\n                }\n                groupChatSync.sync();\n            });\n\n            messageElement.current.value = '';\n\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n    }\n\n    const inviteOperator = (e) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/inviteoperator/\" + props.chatId + \"/\" + e.id).then(result => {\n            groupChatSync.setFetchStatus(true);\n            groupChatSync.sync();\n            e.invited = true;\n            dispatch({\n                type: 'update',\n                value: {\n                    \"operators_invite\" : state.operators_invite\n                }\n            });\n        });\n    }\n\n    const cancelInvite = (e) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/cancelinvite/\" + props.chatId + \"/\" + e.id).then(result => {\n            groupChatSync.setFetchStatus(true);\n            groupChatSync.sync();\n            e.invited = false;\n            dispatch({\n                type: 'update',\n                value: {\n                    \"operators_invite\" : state.operators_invite\n                }\n            });\n        });\n    }\n\n    const { t, i18n } = useTranslation('group_chat');\n\n    if (state.error != '') {\n        return (<React.Fragment>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"alert alert-info\" role=\"alert\">\n                        {state.error}\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>)\n    }\n\n    return (\n\n\n\n        <React.Fragment>\n            <div className={\"row group-chat-\"+(props.chatPublicId ? \"public\" : \"private\")}>\n\n                {props.chatPublicId && state.chat.type == 2 && <div className=\"col-12 pb-1\">\n\n                    {state.operators.map((operator, index) => (\n                        <button className=\"btn btn-sm fs12 btn-outline-secondary mb-1 me-1\">{props.userId != operator.user_id && <i title=\"Start chat with an operator directly\" onClick={(e) => startChatWithOperator(operator)} className=\"material-icons action-image\">chat</i>} {state.chat.user_id == operator.user_id && <i title=\"Group owner\" className=\"material-icons\">account_balance</i>} {operator.n_off_full}\n                                            {!operator.jtime && <span className=\"ms-1 badge badge-info fs11\">{t('operator.pending_join')}</span>} <i className=\"material-icons\">{operator.hide_online ? 'flash_off' : 'flash_on'}</i>{operator.last_activity_ago}</button>\n                    ))}\n\n                </div>}\n\n                <div className={(props.chatPublicId ? \"col-12\" : \"col-7\")}>\n                    <div className=\"message-block\">\n\n                        {state.has_more_messages && <a className=\"load-prev-btn\"  title=\"Load more...\" onClick={(e) => loadPrevious()}><i className=\"material-icons\">&#xE889;</i></a>}\n\n                        <div className=\"msgBlock msgBlock-admin msgBlock-group-admin\" ref={messagesElement}>\n                           {state.messages.map((message, index) => (\n                                <GroupChatMessage key={'msg_' + props.chatId + '_' + index} index={index} message={message} />\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"message-container-admin mt-2\">\n                        <textarea ref={messageElement} placeholder={t('message.enter_message')} onKeyDown={(e) => addMessage(e)} className=\"form-control form-control-sm form-group\" rows=\"2\"></textarea>\n                    </div>\n                </div>\n                {!props.chatPublicId && <div className=\"chat-main-right-column col-5\">\n                    <div role=\"tabpanel\">\n                        <ul className=\"nav nav-pills\" role=\"tablist\" ref={tabsContainer}>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link active\" href={\"#group-chat-\"+props.chatId} aria-controls={\"#group-chat-\"+props.chatId} role=\"tab\" data-bs-toggle=\"tab\" title=\"Operators\"><i className=\"material-icons me-0\">face</i></a></li>\n                            <li className=\"nav-item\" role=\"presentation\"><a className=\"nav-link \" href={\"#group-chat-info-\"+props.chatId} aria-controls={\"#group-chat-info-\"+props.chatId} title=\"Information\" role=\"tab\" data-bs-toggle=\"tab\"><i className=\"material-icons me-0\">info_outline</i></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div role=\"tabpanel\" className=\"tab-pane active\" id={\"group-chat-\"+props.chatId}>\n\n                                <ul className=\"list-group list-group-flush border-0 mw-100 mx275\">\n                                    {state.operators.map((operator, index) => (\n                                        <li className=\"list-group-item ps-1 py-1\">{props.userId != operator.user_id && <i title=\"Start chat with an operator directly\" onClick={(e) => startChatWithOperator(operator)} className=\"material-icons action-image\">chat</i>} {state.chat.user_id == operator.user_id && <i title=\"Group owner\" className=\"material-icons\">account_balance</i>} {operator.n_off_full}<span className=\"float-end fs11\">\n                                            {!operator.jtime && <span className=\"badge badge-info fs11\">{t('operator.pending_join')}</span>} {operator.last_activity_ago} <i className=\"material-icons\">{operator.hide_online ? 'flash_off' : 'flash_on'}</i>\n                                        </span>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n\n                            <div role=\"tabpanel\" className=\"tab-pane\" id={\"group-chat-info-\"+props.chatId}>\n\n                                {state.chat.type == 1 && <div>\n                                    <div className=\"row\">\n                                        <div className=\"col-9\">\n                                            <input ref={searchOperatorElement} onKeyUp={searchOpeartors} type=\"text\" placeholder={t('operator.search_tip')} className=\"form-control form-control-sm\" />\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <div className=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n                                                <button onClick={searchOpeartors} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">search</span></button>\n                                                <button disabled={state.operators_invite.length == 0} onClick={cancelSearch} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">delete</span></button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <ul className=\"m-0 p-0 mt-2 mx275\">\n                                        {state.operators_invite.map((operator, index) => (\n                                            <li className=\"list-group-item p-2 fs13\" title={operator.id}>\n                                                {operator.name_official}\n                                                {!operator.member && !operator.invited && <button className=\"float-end btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{t('operator.invite')}</button>}\n                                                {!operator.member && operator.invited && <button className=\"float-end btn btn-xs btn-warning\" onClick={(e) => cancelInvite(operator)}>{t('operator.cancel_invite')}</button>}\n                                                {operator.member && <button disabled=\"disabled\" className=\"float-end btn btn-xs btn-success\">{t('operator.already_member')}</button>}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    <hr/>\n                                </div>}\n\n                                <button className=\"btn btn-xs btn-danger\" title={t('operator.leave_group_tip')} onClick={(e) => leaveGroup()}>{t('operator.leave_group')}</button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>}\n\n                {props.chatPublicId && <div className=\"col-12\">\n\n                    <div className=\"pb-1\">\n                    {props.chatPublicId && state.chat.type == 2 && state.supervisors.length > 0 && state.supervisors.map((operator, index) => (\n                            <React.Fragment>\n                                {!operator.member && !operator.invited && <button className=\"btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{operator.nick} | {t('operator.invite')}</button>}\n                            </React.Fragment>\n                        ))}\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-9\">\n                            <input ref={searchOperatorElement} onKeyUp={searchOpeartors} type=\"text\" placeholder={t('operator.search_tip')} className=\"form-control form-control-sm\" />\n                        </div>\n                        <div className=\"col-3\">\n                            <div className=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n                                <button onClick={searchOpeartors} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">search</span></button>\n                                <button disabled={state.operators_invite.length == 0} onClick={cancelSearch} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">delete</span></button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <ul className=\"m-0 p-0 mt-2 mx275\">\n                        {state.operators_invite.map((operator, index) => (\n                            <li className=\"list-group-item p-2 fs13\" title={operator.id}>\n                                {operator.name_official}\n                                {!operator.member && !operator.invited && <button className=\"float-end btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{t('operator.invite')}</button>}\n                                {!operator.member && operator.invited && <button className=\"float-end btn btn-xs btn-warning\" onClick={(e) => cancelInvite(operator)}>{t('operator.cancel_invite')}</button>}\n                                {operator.member && <button disabled=\"disabled\" className=\"float-end btn btn-xs btn-success\">{t('operator.already_member')}</button>}\n                            </li>\n                        ))}\n                    </ul>\n\n                </div>}\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default GroupChat","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["GroupChatMessage","_ref","message","index","operatorChanged","parse","replace","domNode","attribs","cloneAttr","Object","assign","className","indexOf","onclick","name","React","domToReact","children","groupChatSync","_createClass","_groupChatSync","_classCallCheck","this","eventEmitter","EventEmitter","chatsSynchro","chatsSynchroMsg","timeoutSync","syncInProgress","fetchStatus","key","value","status","_this","axios","WWW_DIR_JAVASCRIPT","then","result","groupedData","data","forEach","chatData","chat_id","parts","split","message_id","join","result_status","lgsync","chatId","emitEvent","_this2","clearTimeout","length","setInterval","sync","cb","push","parseInt","addListener","startSync","splice","removeListener","reducer","state","action","type","count","_objectSpread","messages","lmsop","history","msg","unshift","Error","headers","common","confLH","csrf_token","props","messageElement","useRef","messagesElement","tabsContainer","searchOperatorElement","_useReducer","useReducer","operators","supervistors","operators_invite","chat","has_more_messages","old_message_id","last_message","error","last_message_id","_useReducer2","_slicedToArray","dispatch","startChatWithOperator","operator","ee","user_id","setUnreadSupportChat","whoisHot","tab","document","getElementById","hotSet","classList","contains","querySelector","remove","id","unread","playSoundMessage","lhinst","playNewMessageSound","useEffect","current","scrollTop","scrollHeight","chatPublicId","searchTimeout","searchOpeartors","setTimeout","escape","cancelSearch","chatSynced","e","content","msop","valueUpdate","subTabClicked","tabClicked","div","createElement","innerHTML","prepend","firstChild","addEventListener","localStorage","achat_id_array","achat_id","getItem","setItem","rememberChat","subTab","paramsStart","getAttribute","default_message","focus","String","addSubscriber","container","bsn","require","tabs","querySelectorAll","Array","prototype","call","element","Tab","supervisors","removeDialogTabGroup","$","response","elm","forceFocus","tabHot","offsetHeight","add","click","prefillMessage","forgetChat","removeSubscriber","inviteOperator","setFetchStatus","invited","cancelInvite","_useTranslation","useTranslation","t","i18n","role","map","userId","title","onClick","n_off_full","jtime","hide_online","last_activity_ago","has_messages","ref","placeholder","onKeyDown","keyCode","preventDefault","stopPropagation","addMessage","rows","href","onKeyUp","disabled","name_official","member","nick","callback","delay","savedCallback","clearInterval"],"sourceRoot":""}