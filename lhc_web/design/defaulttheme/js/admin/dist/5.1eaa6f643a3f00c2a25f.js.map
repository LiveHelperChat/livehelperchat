{"version":3,"sources":["webpack://LHCReactAPPAdmin/./src/components/parts/GroupChatMessage.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js","webpack://LHCReactAPPAdmin/./src/components/lib/groupChatSync.js","webpack://LHCReactAPPAdmin/./src/components/GroupChat.js"],"names":["React","memo","message","index","operatorChanged","parse","replace","domNode","attribs","cloneAttr","Object","assign","className","indexOf","onclick","name","domToReact","children","useInterval","groupChatSync","this","eventEmitter","EventEmitter","chatsSynchro","chatsSynchroMsg","timeoutSync","syncInProgress","fetchStatus","status","axios","post","WWW_DIR_JAVASCRIPT","then","result","groupedData","data","forEach","chatData","chat_id","parts","split","message_id","join","result_status","lgsync","chatId","emitEvent","clearTimeout","length","setInterval","sync","cb","push","parseInt","addListener","startSync","splice","removeListener","reducer","state","action","type","count","value","messages","lmsop","history","msg","unshift","Error","GroupChat","props","messageElement","useRef","messagesElement","tabsContainer","searchOperatorElement","useReducer","operators","supervistors","operators_invite","chat","has_more_messages","old_message_id","last_message","error","last_message_id","dispatch","startChatWithOperator","operator","angular","element","scope","startChatOperatorPublic","user_id","setUnreadSupportChat","whoisHot","tab","document","getElementById","hotSet","classList","contains","querySelector","remove","ee","id","unread","useEffect","current","scrollTop","scrollHeight","chatPublicId","searchTimeout","searchOpeartors","setTimeout","get","escape","cancelSearch","chatSynced","e","content","msop","valueUpdate","subTabClicked","tabClicked","div","createElement","innerHTML","prepend","firstChild","addEventListener","localStorage","achat_id_array","achat_id","getItem","setItem","rememberChat","subTab","paramsStart","getAttribute","default_message","focus","String","addSubscriber","container","bsn","require","tabs","querySelectorAll","Array","prototype","call","Tab","supervisors","lhinst","removeDialogTabGroup","$","response","elm","forceFocus","tabHot","offsetHeight","add","click","prefillMessage","forgetChat","removeSubscriber","inviteOperator","setFetchStatus","invited","cancelInvite","useTranslation","t","i18n","Fragment","role","map","userId","title","onClick","n_off_full","jtime","hide_online","last_activity_ago","has_messages","ref","key","placeholder","onKeyDown","doSearch","keyCode","preventDefault","stopPropagation","addMessage","rows","href","aria-controls","data-toggle","onKeyUp","aria-label","disabled","name_official","member","nick"],"mappings":"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","file":"5.1eaa6f643a3f00c2a25f.js","sourcesContent":["import parse, { domToReact } from 'html-react-parser';\nimport React from \"react\";\n\nconst GroupChatMessage = ({message, index}) => {\n\n    var operatorChanged = false;\n\n    return parse(message['msg'], {\n\n        replace: domNode => {\n            if (domNode.attribs) {\n\n                var cloneAttr = Object.assign({}, domNode.attribs);\n\n                if (domNode.attribs.class) {\n                    domNode.attribs.className = domNode.attribs.class;\n\n                    // Animate only if it's not first sync call\n                    if (domNode.attribs.className.indexOf('message-row') !== -1 && index > 0) {\n                        domNode.attribs.className += ' fade-in-fast';\n                        if (message['msop'] > 0 && message['msop'] != message['lmsop'] && operatorChanged == false) {\n                            domNode.attribs.className += ' operator-changes';\n                            operatorChanged = true;\n                        }\n                    }\n\n                    delete domNode.attribs.class;\n                }\n\n                if (domNode.attribs.onclick) {\n                    delete domNode.attribs.onclick;\n                }\n\n                if (domNode.name && domNode.name === 'img') {\n                    return <img {...domNode.attribs} />\n                } else if (domNode.name && domNode.name === 'a') {\n                    if (cloneAttr.onclick) {\n                        return <a {...domNode.attribs}  >{domToReact(domNode.children)}</a>\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport default React.memo(GroupChatMessage);","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;","import axios from \"axios\";\n\nclass _groupChatSync {\n\n    constructor() {\n        this.eventEmitter = new EventEmitter();\n        this.chatsSynchro = [];\n        this.chatsSynchroMsg = [];\n        this.timeoutSync = null;\n        this.syncInProgress = false;\n        this.fetchStatus = false;\n    }\n\n    setFetchStatus(status) {\n        this.fetchStatus = status;\n    }\n\n    sync() {\n        if (this.syncInProgress == true) {return;}\n\n        this.syncInProgress = true;\n\n        axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/sync\" + (this.fetchStatus == true ? '/(opt)/status' : ''), this.chatsSynchroMsg).then(result => {\n\n            this.fetchStatus = false;\n\n            let groupedData = [];\n\n            result.data.result.forEach((chatData) => {\n                if (!groupedData[chatData.chat_id]) {\n                    groupedData[chatData.chat_id] = {};\n                }\n\n                groupedData[chatData.chat_id][\"msg\"] = chatData;\n\n                let index = this.chatsSynchro.indexOf(chatData.chat_id);\n                let parts = this.chatsSynchroMsg[index].split(\",\");\n                parts[1] = chatData.message_id;\n\n                this.chatsSynchroMsg[index] = parts.join(\",\");\n            });\n\n            result.data.result_status.forEach((chatData) => {\n                if (!groupedData[chatData.chat_id]) {\n                    groupedData[chatData.chat_id] = {};\n                }\n\n                groupedData[chatData.chat_id][\"status\"] = chatData;\n\n                let index = this.chatsSynchro.indexOf(chatData.chat_id);\n                let parts = this.chatsSynchroMsg[index].split(\",\");\n                parts[2] = chatData.lgsync;\n\n                this.chatsSynchroMsg[index] = parts.join(\",\");\n            })\n\n            groupedData.forEach((chatData, chatId) => {\n                this.eventEmitter.emitEvent('gchat_'+chatId, [chatData]);\n            });\n\n            this.syncInProgress = false;\n        });\n    }\n\n    startSync() {\n        clearTimeout(this.timeoutSync);\n        if (this.chatsSynchro.length > 0) {\n            this.timeoutSync = setInterval(() => { this.sync(); }, 2500);\n        }\n    }\n\n    addSubscriber(chatId, cb) {\n        this.chatsSynchro.push(parseInt(chatId));\n        this.chatsSynchroMsg.push(chatId+\",0,0\");\n        this.eventEmitter.addListener('gchat_'+chatId, cb);\n        this.startSync();\n    }\n\n    removeSubscriber(chatId, cb) {\n        var index = this.chatsSynchro.indexOf(parseInt(chatId));\n        if (index !== -1) {\n            this.chatsSynchro.splice(index, 1);\n            this.chatsSynchroMsg.splice(index, 1);\n            this.eventEmitter.removeListener('gchat_'+chatId, cb);\n            this.startSync();\n        }\n    }\n};\n\nconst groupChatSync = new _groupChatSync();\nexport { groupChatSync };","//https://medium.com/@MilkMan/read-this-before-refactoring-your-big-react-class-components-to-hooks-515437e9d96f\n//https://reactjs.org/docs/hooks-reference.html#usereducer\n\nimport React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport GroupChatMessage from \"./parts/GroupChatMessage\";\nimport useInterval from \"./lib/useInterval\";\nimport {groupChatSync} from \"./lib/groupChatSync\";\nimport {useTranslation} from 'react-i18next';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'increment':\n            return {count: state.count + 1};\n        case 'decrement':\n            return {count: state.count - 1};\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n        case 'update_messages': {\n\n            // Set last operator from previous state\n            action.messages['lmsop'] = state.lmsop || action.value.lmsop;\n\n            // Update state\n            state = { ...state, ...action.value };\n\n            // Update message\n            state.messages.push(action.messages);\n\n            return state;\n        }\n        case 'update_history': {\n            state = { ...state, ...action.value };\n            if (action.history.msg != '') {\n                state.messages.unshift(action.history);\n            }\n            return state;\n        }\n        case 'init':\n            return {count: state.count - 1};\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst GroupChat = props => {\n\n    const messageElement = useRef(null);\n    const messagesElement = useRef(null);\n    const tabsContainer = useRef(null);\n    const searchOperatorElement = useRef(null);\n\n    const [state, dispatch] = useReducer(reducer, {\n        messages: [],\n        operators: [],\n        supervistors: [],\n        operators_invite: [],\n        chat: {},\n        has_more_messages: false,\n        old_message_id: 0,\n        last_message: '',\n        error: '',\n        last_message_id: 0,\n        lmsop: 0,\n        lgsync: 0\n    });\n\n    const loadMainData = () => {\n        return axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/\" + (props.chatPublicId ? 'loadpublichat' : 'loadgroupchat') + \"/\" + (props.chatPublicId || props.chatId));\n    }\n\n    const loadPrevious = () => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/loadpreviousmessages/\" + props.chatId+'/'+state.old_message_id).then(result => {\n            dispatch({\n                type: 'update_history',\n                value: {\n                    'has_more_messages' : result.data.has_messages,\n                    'old_message_id' : result.data.message_id\n                },\n                history: {\n                    \"msg\" : result.data.result,\n                    \"msop\" : result.data.msop,\n                    \"lmsop\" : result.data.lmsop\n                }\n            });\n        });\n    }\n\n    const startChatWithOperator = (operator) => {\n        var lhcController = angular.element('body').scope();\n        lhcController.startChatOperatorPublic(operator.user_id);\n    }\n\n    const setUnreadSupportChat = (chat_id, length) => {\n        var tab = document.getElementById('chat-tab-link-'+chat_id);\n        var whoisHot,hotSet = false;\n        if (tab !== null && length > 1 && !tab.classList.contains('active') && (whoisHot = tab.querySelector('.whatshot')) !== null) {\n            whoisHot.classList.remove(\"d-none\");\n            ee.emitEvent('supportUnreadChat', [{id:chat_id,unread:true}]);\n            hotSet = true;\n        }\n\n        if (hotSet == false) {\n            tab = document.getElementById('private-chat-tab-link-'+chat_id);\n            if (tab !== null && length > 1 && !tab.classList.contains('active') && (whoisHot = tab.querySelector('.whatshot')) !== null) {\n                whoisHot.classList.remove(\"d-none\");\n            }\n        }\n    }\n\n    useEffect(() => {\n        messagesElement.current.scrollTop = messagesElement.current.scrollHeight;\n\n        if (!props.chatPublicId) {\n            var tab = document.getElementById('chat-tab-link-gc'+props.chatId);\n            if (tab && state.messages.length > 1 && !tab.classList.contains('active')) {\n                tab.querySelector('.whatshot').classList.remove(\"d-none\");\n            }\n        } else {\n            setUnreadSupportChat(props.chatPublicId, state.messages.length);\n        }\n\n    },[state.messages.length]);\n\n    const rememberChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('gachat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) === -1){\n                    achat_id_array.push(chatId);\n                    localStorage.setItem('gachat_id',achat_id_array.join(','));\n                }\n\n            } catch(e) {\n\n            }\n        }\n    }\n\n    const leaveGroup = () => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/leave/\" + props.chatId).then(result => {\n            lhinst.removeDialogTabGroup('gc'+props.chatId,$('#tabs'),true)\n        });\n    }\n\n    var searchTimeout = null\n    const searchOpeartors = () => {\n        clearTimeout(searchTimeout);\n        searchTimeout = setTimeout(() => {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/searchoperator/\"+props.chatId+\"?\"+(props.chatPublicId ? \"id=\"+props.chatPublicId+\"&\" : '')+\"q=\" + escape(searchOperatorElement.current.value)).then(result => {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"operators_invite\" : result.data\n                    }\n                });\n            });\n        },200);\n    }\n\n    const cancelSearch = () => {\n        dispatch({\n            type: 'update',\n            value: {\n                \"operators_invite\" : []\n            }\n        });\n    }\n\n    const forgetChat = (chatId) => {\n        if (localStorage) {\n            try {\n                var achat_id_array = [];\n                var achat_id = localStorage.getItem('gachat_id');\n\n                if (achat_id !== null && achat_id !== '') {\n                    achat_id_array = achat_id.split(',');\n                }\n\n                if (achat_id_array.indexOf(chatId) !== -1) {\n                    achat_id_array.splice(achat_id_array.indexOf(chatId),1);\n                }\n\n                localStorage.setItem('gachat_id',achat_id_array.join(','));\n            } catch(e) {\n\n            }\n        }\n    }\n\n    useEffect(() => {\n\n        const chatSynced = (e) => {\n            if (e.msg) {\n                dispatch({\n                    type: 'update_messages',\n                    messages : {\n                        'msg':e.msg.content,\n                        'msop': e.msg.msop,\n                    },\n                    value: {\n                        'last_message_id' : e.msg.message_id,\n                        'lmsop': e.msg.lmsop\n                    }\n                });\n            }\n\n            if (e.status) {\n                let valueUpdate = {\n                    'operators': e.status.operators,\n                    'lgsync': e.status.lgsync\n                };\n\n                if (e.status.old_message_id) {\n                    valueUpdate['has_more_messages'] = e.status.has_more_messages;\n                    valueUpdate['old_message_id'] = e.status.old_message_id;\n                }\n\n                dispatch({\n                    type: 'update',\n                    value: valueUpdate\n                });\n            }\n        }\n\n        const subTabClicked = (e) => {\n            tabClicked(props.chatPublicId, null, true);\n        }\n\n        loadMainData().then(result => {\n\n            if (!props.chatPublicId) {\n                rememberChat(props.chatId);\n            } else {\n                var div = document.createElement('div');\n                div.innerHTML = \"<i class=\\\"whatshot blink-ani d-none text-warning material-icons\\\">whatshot</i>\";\n                document.getElementById('chat-tab-link-'+props.chatPublicId).prepend(div.firstChild);\n                document.getElementById('private-chat-tab-link-'+props.chatPublicId).addEventListener('click',subTabClicked);\n             }\n\n            var subTab = document.getElementById('private-chat-tab-link-'+props.chatPublicId);\n\n            if ((props.paramsStart && props.paramsStart.unread) || (subTab !== null && subTab.getAttribute('data-unread') == 'true')) {\n                setUnreadSupportChat(props.chatPublicId,2);\n            }\n\n            if (props.paramsStart && props.paramsStart.default_message && messageElement.current !== null) {\n                messageElement.current.focus();\n                messageElement.current.value = '[quote]'+props.paramsStart.default_message+'[/quote]'+\"\\n\";\n            }\n\n            props.chatId = String(result.data.chat.id);\n            groupChatSync.addSubscriber(props.chatId, chatSynced);\n            groupChatSync.sync();\n\n            if (!props.chatPublicId){\n                var container = tabsContainer.current;\n                var bsn = require(\"bootstrap.native/dist/bootstrap-native-v4\");\n                var tabs = container.querySelectorAll('[data-toggle=\"tab\"]');\n\n                if (tabs.length > 0) {\n                    Array.prototype.forEach.call(tabs, function(element){ new bsn.Tab( element) });\n                }\n            }\n\n            dispatch({\n                type: 'update',\n                value: {\n                    'chat': result.data.chat,\n                    'supervisors': result.data.supervisors || []\n                }\n            });\n\n        }).catch((error) => {\n           !props.chatPublicId && lhinst.removeDialogTabGroup('gc'+props.chatId,$('#tabs'),true);\n            if (error.response && error.response.data && error.response.data.error) {\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"error\" : error.response.data.error\n                    }\n                });\n            }\n        })\n\n        const tabClicked = (e, elm, forceFocus) => {\n            if ((props.chatPublicId && e == props.chatPublicId) || (!props.chatPublicId && e == props.chatId)) {\n\n                if (messagesElement.current !== null){\n                    setTimeout(() => {\n                        if (messagesElement.current !== null){\n                            (!props.chatPublicId || forceFocus) && messageElement.current.focus();\n                            if (messagesElement.current.scrollHeight - (messagesElement.current.scrollTop + messagesElement.current.offsetHeight) < (messagesElement.current.offsetHeight - 50)) {\n                                messagesElement.current.scrollTop = messagesElement.current.scrollHeight;\n                            }\n                        }\n                    },2);\n                }\n\n                var tab = document.getElementById(!props.chatPublicId ? 'chat-tab-link-gc'+props.chatId : 'chat-tab-link-'+props.chatPublicId);\n\n                if (tab !== null) {\n                    var tabHot = tab.querySelector('.whatshot');\n                    if (tabHot !== null && !tabHot.classList.contains(\"d-none\")) {\n                        tabHot.classList.add(\"d-none\");\n                        // Activate private chat subtab if it was pending\n                        if (props.chatPublicId) {\n                            document.getElementById('private-chat-tab-link-'+props.chatPublicId).click();\n                        }\n                    }\n                }\n\n                if (props.chatPublicId){\n                    var tab = document.getElementById('private-chat-tab-link-'+props.chatPublicId);\n                    if (tab !== null) {\n                        var tabHot = tab.querySelector('.whatshot');\n                        if (tabHot !== null && !tabHot.classList.contains(\"d-none\")) {\n                            tabHot.classList.add(\"d-none\");\n                        }\n                    }\n                }\n            }\n        }\n\n        const prefillMessage = (chatId, message) => {\n            if (props.chatPublicId && chatId == props.chatPublicId) {\n                if (messageElement && messageElement.current) {\n                    messageElement.current.value = '[quote]'+message+'[/quote]'+\"\\n\";\n                    messageElement.current.focus();\n                }\n            }\n        }\n\n        if (props.chatPublicId){\n            ee.addListener('groupChatPrefillMessage',prefillMessage);\n        }\n\n        ee.addListener((!props.chatPublicId ? 'groupChatTabClicked' : 'chatTabClicked'),tabClicked)\n\n        !props.chatPublicId && messageElement.current.focus();\n\n        return function cleanup() {\n\n            forgetChat(props.chatId)\n\n            if (!props.chatPublicId) {\n                ee.removeListener('groupChatTabClicked',tabClicked);\n            } else {\n                ee.removeListener('chatTabClicked',tabClicked);\n                ee.removeListener('prefillMessage',prefillMessage);\n            }\n\n            groupChatSync.removeSubscriber(props.chatId, chatSynced);\n        };\n    },[]);\n\n    const addMessage = (e, doSearch) => {\n        if (e.keyCode == 13) {\n\n            axios.post(WWW_DIR_JAVASCRIPT  + \"groupchat/addmessage/\" + props.chatId,{msg: messageElement.current.value}).then(result => {\n                if (result.data.result.indexOf('status') !== -1) {\n                    groupChatSync.setFetchStatus(true);\n                }\n                groupChatSync.sync();\n            });\n\n            messageElement.current.value = '';\n\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n    }\n\n    const inviteOperator = (e) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/inviteoperator/\" + props.chatId + \"/\" + e.id).then(result => {\n            groupChatSync.setFetchStatus(true);\n            groupChatSync.sync();\n            e.invited = true;\n            dispatch({\n                type: 'update',\n                value: {\n                    \"operators_invite\" : state.operators_invite\n                }\n            });\n        });\n    }\n\n    const cancelInvite = (e) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"groupchat/cancelinvite/\" + props.chatId + \"/\" + e.id).then(result => {\n            groupChatSync.setFetchStatus(true);\n            groupChatSync.sync();\n            e.invited = false;\n            dispatch({\n                type: 'update',\n                value: {\n                    \"operators_invite\" : state.operators_invite\n                }\n            });\n        });\n    }\n\n    const { t, i18n } = useTranslation('group_chat');\n\n    if (state.error != '') {\n        return (<React.Fragment>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"alert alert-info\" role=\"alert\">\n                        {state.error}\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>)\n    }\n\n    return (\n\n\n\n        <React.Fragment>\n            <div className={\"row group-chat-\"+(props.chatPublicId ? \"public\" : \"private\")}>\n\n                {props.chatPublicId && state.chat.type == 2 && <div className=\"col-12 pb-1 border-bottom\">\n\n                    {state.operators.map((operator, index) => (\n                        <button className=\"btn btn-sm fs12 btn-outline-secondary mb-1 mr-1\">{props.userId != operator.user_id && <i title=\"Start chat with an operator directly\" onClick={(e) => startChatWithOperator(operator)} className=\"material-icons action-image\">chat</i>} {state.chat.user_id == operator.user_id && <i title=\"Group owner\" className=\"material-icons\">account_balance</i>} {operator.n_off_full}\n                                            {!operator.jtime && <span className=\"ml-1 badge badge-info fs11\">{t('operator.pending_join')}</span>} <i className=\"material-icons\">{operator.hide_online ? 'flash_off' : 'flash_on'}</i>{operator.last_activity_ago}</button>\n                    ))}\n\n                </div>}\n\n                <div className={(props.chatPublicId ? \"col-12\" : \"col-7\")}>\n                    <div className=\"message-block\">\n\n                        {state.has_more_messages && <a className=\"load-prev-btn\"  title=\"Load more...\" onClick={(e) => loadPrevious()}><i className=\"material-icons\">&#xE889;</i></a>}\n\n                        <div className=\"msgBlock msgBlock-admin msgBlock-group-admin\" ref={messagesElement}>\n                           {state.messages.map((message, index) => (\n                                <GroupChatMessage key={'msg_' + props.chatId + '_' + index} index={index} message={message} />\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"message-container-admin mt-2\">\n                        <textarea ref={messageElement} placeholder={t('message.enter_message')} onKeyDown={(e) => addMessage(e)} className=\"form-control form-control-sm form-group\" rows=\"2\"></textarea>\n                    </div>\n                </div>\n                {!props.chatPublicId && <div className=\"chat-main-right-column col-5\">\n                    <div role=\"tabpanel\">\n                        <ul className=\"nav nav-pills\" role=\"tablist\" ref={tabsContainer}>\n                            <li role=\"presentation\" className=\"nav-item\"><a className=\"nav-link active\" href={\"#group-chat-\"+props.chatId} aria-controls={\"#group-chat-\"+props.chatId} role=\"tab\" data-toggle=\"tab\" title=\"Operators\"><i className=\"material-icons mr-0\">face</i></a></li>\n                            <li className=\"nav-item\" role=\"presentation\"><a className=\"nav-link \" href={\"#group-chat-info-\"+props.chatId} aria-controls={\"#group-chat-info-\"+props.chatId} title=\"Information\" role=\"tab\" data-toggle=\"tab\"><i className=\"material-icons mr-0\">info_outline</i></a></li>\n                        </ul>\n                        <div className=\"tab-content\">\n                            <div role=\"tabpanel\" className=\"tab-pane active\" id={\"group-chat-\"+props.chatId}>\n\n                                <ul className=\"list-group list-group-flush border-0 mw-100 mx275\">\n                                    {state.operators.map((operator, index) => (\n                                        <li className=\"list-group-item pl-1 py-1\">{props.userId != operator.user_id && <i title=\"Start chat with an operator directly\" onClick={(e) => startChatWithOperator(operator)} className=\"material-icons action-image\">chat</i>} {state.chat.user_id == operator.user_id && <i title=\"Group owner\" className=\"material-icons\">account_balance</i>} {operator.n_off_full}<span className=\"float-right fs11\">\n                                            {!operator.jtime && <span className=\"badge badge-info fs11\">{t('operator.pending_join')}</span>} {operator.last_activity_ago} <i className=\"material-icons\">{operator.hide_online ? 'flash_off' : 'flash_on'}</i>\n                                        </span>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n\n                            <div role=\"tabpanel\" className=\"tab-pane\" id={\"group-chat-info-\"+props.chatId}>\n\n                                {state.chat.type == 1 && <div>\n                                    <div className=\"form-row\">\n                                        <div className=\"col-9\">\n                                            <input ref={searchOperatorElement} onKeyUp={searchOpeartors} type=\"text\" placeholder={t('operator.search_tip')} className=\"form-control form-control-sm\" />\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <div className=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n                                                <button onClick={searchOpeartors} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">search</span></button>\n                                                <button disabled={state.operators_invite.length == 0} onClick={cancelSearch} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">delete</span></button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <ul className=\"m-0 p-0 mt-2 mx275\">\n                                        {state.operators_invite.map((operator, index) => (\n                                            <li className=\"list-group-item p-2 fs13\" title={operator.id}>\n                                                {operator.name_official}\n                                                {!operator.member && !operator.invited && <button className=\"float-right btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{t('operator.invite')}</button>}\n                                                {!operator.member && operator.invited && <button className=\"float-right btn btn-xs btn-warning\" onClick={(e) => cancelInvite(operator)}>{t('operator.cancel_invite')}</button>}\n                                                {operator.member && <button disabled=\"disabled\" className=\"float-right btn btn-xs btn-success\">{t('operator.already_member')}</button>}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    <hr/>\n                                </div>}\n\n                                <button className=\"btn btn-xs btn-danger\" title={t('operator.leave_group_tip')} onClick={(e) => leaveGroup()}>{t('operator.leave_group')}</button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>}\n\n                {props.chatPublicId && <div className=\"col-12\">\n\n                    <div className=\"pb-1\">\n                    {props.chatPublicId && state.chat.type == 2 && state.supervisors.length > 0 && state.supervisors.map((operator, index) => (\n                            <React.Fragment>\n                                {!operator.member && !operator.invited && <button className=\"btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{operator.nick} | {t('operator.invite')}</button>}\n                            </React.Fragment>\n                        ))}\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-9\">\n                            <input ref={searchOperatorElement} onKeyUp={searchOpeartors} type=\"text\" placeholder={t('operator.search_tip')} className=\"form-control form-control-sm\" />\n                        </div>\n                        <div className=\"col-3\">\n                            <div className=\"btn-group w-100\" role=\"group\" aria-label=\"Basic example\">\n                                <button onClick={searchOpeartors} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">search</span></button>\n                                <button disabled={state.operators_invite.length == 0} onClick={cancelSearch} className=\"btn d-block btn-secondary btn-sm\"><span className=\"material-icons\">delete</span></button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <ul className=\"m-0 p-0 mt-2 mx275\">\n                        {state.operators_invite.map((operator, index) => (\n                            <li className=\"list-group-item p-2 fs13\" title={operator.id}>\n                                {operator.name_official}\n                                {!operator.member && !operator.invited && <button className=\"float-right btn btn-xs btn-secondary\" onClick={(e) => inviteOperator(operator)}>{t('operator.invite')}</button>}\n                                {!operator.member && operator.invited && <button className=\"float-right btn btn-xs btn-warning\" onClick={(e) => cancelInvite(operator)}>{t('operator.cancel_invite')}</button>}\n                                {operator.member && <button disabled=\"disabled\" className=\"float-right btn btn-xs btn-success\">{t('operator.already_member')}</button>}\n                            </li>\n                        ))}\n                    </ul>\n\n                </div>}\n\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default GroupChat"],"sourceRoot":""}