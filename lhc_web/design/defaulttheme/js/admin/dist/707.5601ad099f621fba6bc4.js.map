{"version":3,"file":"707.5601ad099f621fba6bc4.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/DashboardChatTabs.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"./lib/useInterval\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                if (action.static_order === true) {\n\n                    var insertIndex = state.chats.findIndex(x => x.id > action.value.id);\n\n                    if (insertIndex === -1) {\n                        state.chats.push(action.value);\n                    } else {\n                        state.chats.splice(insertIndex, 0, action.value);\n                    }\n\n                } else {\n                    state.chats.unshift(action.value);\n                }\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Push to very first if it's not static order\n            if (action.static_order === false) {\n                // Set last appended messages as first array element\n                state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n            }\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst DashboardChatTabs = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        group_offline : false\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const getChatIds = () => {\n        var chatIds = [];\n        state.chats.map((chat, index) => chatIds.push(chat.id));\n        return chatIds;\n    }\n\n    const loadChatTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n\n            result.data.map((chat, index) => {\n\n                // If nodeJS extension is enabled check chat live status\n                // As on page reload react app can be yet not started and we might not receive event\n                // at that moment react app starts\n                var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                if (nodeJSStatus !== null) {\n                    chat.live_status = nodeJSStatus.textContent == 'wifi';\n                }\n\n                dispatch({\n                    type: 'update_chat',\n                    id: chat.id,\n                    value: chat\n                })\n\n            })\n        });\n    }\n\n    if (!document.getElementById('tabs')) {\n        useInterval(() => {\n\n            if (!state.chats || state.chats.length == 0) {\n                return;\n            }\n\n            axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + getChatIds().join('/')).then(result => {\n                result.data.map((chat, index) => {\n\n                    // If nodeJS extension is enabled check chat live status\n                    // As on page reload react app can be yet not started and we might not receive event\n                    // at that moment react app starts\n                    var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                    if (nodeJSStatus !== null) {\n                        chat.live_status = nodeJSStatus.textContent == 'wifi';\n                    }\n\n                    if (!(!state.chats || state.chats.length == 0)) {\n                        var foundIndex = state.chats.findIndex(x => x.id == chat.id);\n                        if (foundIndex !== -1 ) {\n                            if (state.chats[foundIndex].lmsg_id !== chat.lmsg_id) {\n                                chat.mn = 1;\n                            } else {\n                                chat.mn = state.chats[foundIndex].mn;\n                            }\n                        }\n                    }\n\n                    dispatch({\n                        type: 'update_chat',\n                        id: chat.id,\n                        value: chat\n                    })\n\n                })\n            });\n\n        }, 1000);\n    }\n\n\n    useEffect(() => {\n\n        function addTabPreload(chatId, params) {\n\n            if (!(!chatsRef.current.chats || chatsRef.current.chats.length == 0) && chatsRef.current.chats.findIndex(x => x.id == chatId) !== -1) {\n                return; // We already have this chat tab\n            }\n\n            addTab(chatId, params);\n        }\n\n        function addTab(chatId, params) {\n            if (params.focus) {\n                dispatch({\n                    type: 'attr_remove',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\" : false\n                    }\n                });\n            }\n\n            dispatch({\n                type: 'add',\n                static_order: props.static_order,\n                value: {\n                    \"id\" : chatId,\n                    active: params.focus\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function addTabBackground(chatId, params) {\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    static_order: props.static_order,\n                    active: false,\n                    mn : 1\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function removeTab(chatId) {\n            dispatch({\n                type: 'remove',\n                id: chatId\n            });\n        }\n\n        function tabClicked(chatId) {\n            dispatch({\n                type: 'refocus',\n                id: chatId\n            });\n        }\n\n        function chatAdminSync(data) {\n\n            dispatch({\n                type: 'group_offline',\n                value: lhinst.hidenicknamesstatus\n            })\n\n            Object.keys(data.result_status).map((key) => {\n                dispatch({\n                    type: 'update_chat',\n                    id: data.result_status[key].chat_id,\n                    value: data.result_status[key]\n                })\n            });\n\n            if (data.result !== 'false') {\n                Object.keys(data.result).map((key) => {\n                    dispatch({\n                        type: 'msg_received',\n                        id: data.result[key].chat_id,\n                        value: {msg: data.result[key].msg, mn: data.result[key].mn},\n                        order_chats: props.static_order\n                    })\n                });\n            }\n        }\n\n        function supportUnreadChat(params) {\n            if (params.id && params.unread == true) {\n                dispatch({\n                    type: 'update_chat',\n                    id: params.id,\n                    value: {support_chat: true}\n                })\n            }\n        }\n\n        function typingVisitor(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'true','tx' : params.txt}\n            })\n        }\n\n        function typingVisitorStopped(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'false'}\n            })\n        }\n\n        function nodeJsVisitorStatus(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {live_status: params.status}\n            })\n        }\n\n        function activateNextTab(chatid,up) {\n            var index = chatsRef.current.chats.findIndex(x => x.active == true);\n            if (index === -1) { return; }\n            if ((chatsRef.current.chats.length - 1) > index && up == false) {\n                chatTabClick(chatsRef.current.chats[index + 1]);\n            } else if (index > 0 && up == true) {\n                chatTabClick(chatsRef.current.chats[index - 1]);\n            }\n        }\n\n        ee.addListener('chatStartTab',addTab)\n        ee.addListener('chatTabPreload',addTabPreload)\n        ee.addListener('chatStartBackground',addTabBackground)\n        ee.addListener('removeSynchroChat',removeTab)\n        ee.addListener('chatTabClicked',tabClicked)\n        ee.addListener('chatTabFocused',tabClicked)\n        ee.addListener('chatAdminSync',chatAdminSync)\n        ee.addListener('supportUnreadChat',supportUnreadChat)\n        ee.addListener('nodeJsTypingVisitor',typingVisitor)\n        ee.addListener('nodeJsTypingVisitorStopped',typingVisitorStopped)\n        ee.addListener('nodeJsVisitorStatus',nodeJsVisitorStatus)\n        ee.addListener('activateNextTab',activateNextTab)\n\n        if (localStorage) {\n            var achat_id = localStorage.getItem('achat_id');\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',').map(Number);\n\n                if (props.static_order == true) {\n                    ids.sort(function(a, b){return a - b});\n                }\n\n                var entries = [];\n                ids.forEach((id) => {\n                   var el = document.getElementById('chat-tab-link-'+id);\n                   if (parseInt(id) > 0) {\n                       entries.push({id: parseInt(id), active: el !== null && el.classList.contains('active')})\n                   }\n               });\n               dispatch({\n                    type: 'update',\n                    value: {\n                        \"chats\" : entries\n                    }\n                });\n               ids.length > 0 && loadChatTabIntro(ids);\n\n               // Find active chat\n               setTimeout(() => {\n                   ids.forEach((id) => {\n                       var el = document.getElementById('chat-tab-link-'+id);\n                       if (el !== null) {\n                           el.classList.contains('active') && tabClicked(parseInt(id));\n                       }\n                   });\n               },1000);\n            }\n         }\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('chatStartTab', addTab);\n            ee.removeListener('chatStartBackground', addTabBackground);\n            ee.removeListener('removeSynchroChat', removeTab);\n            ee.removeListener('chatTabClicked', tabClicked);\n            ee.removeListener('chatTabFocused', tabClicked);\n            ee.removeListener('chatAdminSync', chatAdminSync);\n            ee.removeListener('supportUnreadChat', chatAdminSync);\n            ee.removeListener('nodeJsTypingVisitor', typingVisitor);\n            ee.removeListener('nodeJsTypingVisitorStopped', typingVisitorStopped);\n            ee.removeListener('nodeJsVisitorStatus', nodeJsVisitorStatus);\n            ee.removeListener('activateNextTab', activateNextTab);\n        };\n\n    },[]);\n\n    const chatTabClick = (chat) => {\n        if (document.getElementById('chat-tab-link-'+chat.id) !== null) {\n            $('#chat-tab-link-'+chat.id).click();\n            (new bootstrap.Tab(document.querySelector('#chat-tab-link-'+chat.id))).show();\n            } else {\n            document.location = WWW_DIR_JAVASCRIPT + 'front/default/(cid)/' + chat.id + '/#!#chat-id-' + chat.id;\n        }\n    }\n\n    const closeDialog = (e,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTab(chat.id,$('#tabs'),true);\n        lhinst.channel && lhinst.channel.postMessage({'action':'close_chat','args':{'chat_id' : chat.id}});\n    }\n\n    const iconClick = (e,icon,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (icon.has_popup) {\n            lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + 'chat/icondetailed/' + chat.id + '/' + icon.icon_id});\n        }\n    }\n\n    const { t, i18n } = useTranslation('chat_tabs');\n\n    return (\n        <React.Fragment>\n            {(!state.chats || state.chats.length == 0) && <div className=\"text-center text-muted p-2\"><span className=\"material-icons\">chat</span>{t('chat_tabs.open_chats')}</div>}\n            {state.chats.map((chat, index) => (\n\n                <div title={chat.id} onClick={() => chatTabClick(chat)} className={\"p-1 action-image chat-tabs-row\"+(chat.active ? ' chat-tab-active' : '')+(chat.vwa ? ' long-response-chat' : '')}>\n                        <div className=\"fs12\">\n                            <span className={\"material-icons\"+(chat.pnd_rsp == true ? ' text-danger' : ' text-success')}>{chat.pnd_rsp == true ? 'call_received' : 'call_made'}</span>\n                            {chat.adicons && chat.adicons.map((icon, index) => <span onClick={(event) => iconClick(event,icon,chat)} style={{'color': icon.color}} className=\"material-icons\" title={icon.title}>{icon.icon}</span>)}\n                            {chat.aicons && Object.keys(chat.aicons).map((key, index) => <span style={{'color': chat.aicons[key].c ? chat.aicons[key].c : \"#1d548e;\"}} className=\"material-icons\" title={chat.aicons[key].i}>{chat.aicons[key].i}</span>)}\n                            {chat.vwa && <span title={chat.vwa} className=\"material-icons text-danger\">timer</span>}\n                            {chat.support_chat && <span className=\"whatshot blink-ani text-warning material-icons\">whatshot</span>}<i className={\"material-icons \"+(typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'icon-user-online' : 'icon-user-offline') : (chat.us == 2 ? \"icon-user-away\" : (chat.us == 0 ? \"icon-user-online\" : \"icon-user-offline\")))}  >{typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'wifi' : 'wifi_off') : (chat.us == 2 ? \"wifi_1_bar\" : (chat.us == 0 ? \"wifi\" : \"wifi_off\"))}</i><i className={\"material-icons icon-user-online \" + (chat.um == 1 ? \"icon-user-offline\" : \"icon-user-online\")}>send</i>{chat.cc && <img title={chat.cn} src={chat.cc} alt=\"\" />} {(state.group_offline == false || !(chat.us != 0)) && <span className={(chat.mn > 0 || chat.cs == 0 ? \"font-weight-bold \" : '') + (chat.cs == 0 ? 'text-danger' : '')}>{chat.nick || chat.id}</span>}{chat.mn > 0 && <span className=\"msg-nm ps-1\">({chat.mn})</span>}{chat.lmsg && <span className=\"text-muted\"> {chat.lmsg}</span>}\n                            <button type=\"button\" onClick={(e) => closeDialog(e,chat)} className=\"float-end btn-link m-0 ms-1 p-0 btn btn-xs\"><i className=\"material-icons me-0\">close</i></button>\n                            {chat.dep && <span className=\"float-end text-muted text-truncate mw-80px\">\n                                {chat.cs == 0 && <span title={t('chat_tabs.pending_status')} className=\"material-icons chat-pending\">chat</span>}\n                                {chat.cs == 1 && <span title={t('chat_tabs.active_status')} className=\"material-icons chat-active\">chat</span>}\n                                {chat.cs == 5 && <span title={t('chat_tabs.bot_status')} className=\"material-icons chat-active\">android</span>}\n                                {chat.cs == 2 && <span title={t('chat_tabs.closed_status')} className=\"material-icons chat-closed\">chat</span>}\n\n                                <span className=\"material-icons\" title={chat.dep}>home</span>\n                                {chat.dep}</span>}\n                            {chat.co == confLH.user_id && <span className=\"float-end text-muted\"><span title={t('chat_tabs.chat_owner')} className=\"material-icons\">account_box</span></span>}\n                        </div>\n\n                        {(chat.msg || (chat.tp == 'true' && chat.tx)) && <div className=\"fs13 text-muted pt-1\">\n                            <span title={chat.tp == 'true' && chat.tx ? chat.tx : chat.msg} className={\"d-inline-block text-truncate mw-100 \"+(chat.mn > 0 ? 'font-weight-bold' : '')+(chat.tp == 'true' && chat.tx ? ' font-italic': '')}>\n                                {chat.tp == 'true' && chat.tx ? chat.tx : chat.msg}\n                            </span>\n                        </div>}\n                </div>\n            ))}\n        </React.Fragment>\n    );\n}\n\nexport default DashboardChatTabs","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","value","attr","static_order","insertIndex","push","splice","unshift","active","mn","support_chat","msg","el","document","getElementById","classList","contains","group_offline","Error","props","useReducer","dispatch","chatsRef","useRef","useEffect","current","getChatIds","chatIds","map","chat","index","loadChatTabIntro","axios","WWW_DIR_JAVASCRIPT","join","then","result","data","nodeJSStatus","live_status","textContent","useInterval","length","lmsg_id","addTab","chatId","params","focus","addTabBackground","removeTab","tabClicked","chatAdminSync","lhinst","hidenicknamesstatus","Object","keys","result_status","key","chat_id","order_chats","typingVisitor","tp","txt","typingVisitorStopped","nodeJsVisitorStatus","status","activateNextTab","chatid","up","chatTabClick","ee","addListener","unread","localStorage","achat_id","getItem","ids","split","Number","sort","a","b","entries","forEach","parseInt","setTimeout","removeListener","$","click","bootstrap","Tab","querySelector","show","location","useTranslation","t","i18n","className","title","onClick","vwa","pnd_rsp","adicons","icon","event","e","preventDefault","stopPropagation","has_popup","lhc","revealModal","icon_id","iconClick","style","color","aicons","c","i","us","um","cc","cn","src","alt","cs","nick","lmsg","removeDialogTab","channel","postMessage","closeDialog","dep","co","confLH","user_id","tx","callback","delay","savedCallback","setInterval","clearInterval"],"sourceRoot":""}