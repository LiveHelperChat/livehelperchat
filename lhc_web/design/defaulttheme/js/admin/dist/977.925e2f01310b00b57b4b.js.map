{"version":3,"file":"977.925e2f01310b00b57b4b.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/CannedMessages.js"],"sourcesContent":["import React, { useEffect, useState, useReducer } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\n\nvar timeoutCannedMessage = null;\nvar _requestTimeout = null;\nvar _cancelToken;\nvar _messageStoreInProgress = false;\n\nconst CannedMessages = props => {\n    const [data, setData] = useState([]);\n    const [isLoaded, setLoaded] = useState(false);\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n    const [isCollapsed, setCollapsed] = useState(true);\n    const [messageIdStore, setmessageIdStore] = useState(0);\n\n    const getRootCategory = () => {\n        if (!isLoaded) {\n            axios.get(WWW_DIR_JAVASCRIPT  + \"cannedmsg/filter/\" + props.chatId).then(result => {\n                setCollapsed(false);\n                setData(result.data);\n                setLoaded(true);\n\n                result.data.map((item, index) => {\n                    item.messages.map(message => {\n                        if (message.current == true) {\n                            renderPreview(message);\n                        }\n                    })\n                });\n\n            });\n        }\n    }\n\n    const expandCategory = (categoryUpdate, indexUpdate) => {\n        categoryUpdate.expanded = !categoryUpdate.expanded;\n        setData(data.map((category, index) => (indexUpdate == index ? categoryUpdate : category)));\n    }\n\n    const fillMessage = (message) => {\n        let element = document.getElementById('CSChatMessage-'+props.chatId);\n\n        if (element.nodeName == 'LHC-EDITOR') {\n            if (element.getAttribute('content_modified')) {\n                element.insertContent(message.msg,{\"convert_bbcode\" : true});\n            } else {\n                element.setContent(message.msg,{\"convert_bbcode\" : true});\n            }\n            element.setFocus();\n        } else {\n            element.value = element.getAttribute('content_modified') ? element.value + message.msg : message.msg ;\n            element.focus();\n        }\n\n        message.subject_ids && element.setAttribute('subjects_ids',message.subject_ids);\n        element.setAttribute('canned_id',message.id);\n        renderPreview(message);\n    }\n\n    const fillAndSend = (message,e) => {\n\n        if (typeof e !== 'undefined') {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n\n        if (_messageStoreInProgress === true) {\n            return;\n        }\n\n        if (messageIdStore == message.id) {\n            if (!confirm(t('chat_canned.send_previous'))) {\n                return;\n            }\n        }\n\n        setmessageIdStore(message.id);\n\n        _messageStoreInProgress = true;\n\n        setTimeout(() => {\n            const formData = new FormData();\n            formData.append('msg', message.msg);\n\n            var hasSubjects = false;\n            if (message.subject_ids) {\n                formData.append('subjects_ids',message.subject_ids);\n                hasSubjects = true;\n            }\n\n            formData.append('canned_id',message.id);\n\n            let element = document.getElementById('CSChatMessage-'+props.chatId);\n\n            if (element && element.getAttribute('mode-write')) {\n                formData.append('mode_write',element.getAttribute('mode-write'));\n            }\n\n            axios.post(WWW_DIR_JAVASCRIPT  + 'chat/addmsgadmin/' + props.chatId, formData,{\n                headers: {'X-CSRFToken': confLH.csrf_token}\n            }).then(result => {\n\n                _messageStoreInProgress = false;\n\n                if (LHCCallbacks.addmsgadmin) {\n                    LHCCallbacks.addmsgadmin(props.chatId);\n                };\n                ee.emitEvent('chatAddMsgAdmin', [props.chatId]);\n\n                if (hasSubjects == true) {\n                    lhinst.updateVoteStatus(props.chatId);\n                }\n\n                lhinst.syncadmincall();\n                return true;\n            }).catch((error) => processRestAPIError(error));\n        }, message.delay);\n    }\n\n    const processRestAPIError = (err) => {\n        _messageStoreInProgress = false;\n        if (!!err.isAxiosError && !err.response) {\n            alert(t('system.error'));\n        } else {\n            if (err.response.data.error) {\n                alert(err.response.data.error);\n            } else {\n                alert(JSON.stringify(err.response.data));\n            }\n        }\n    }\n\n    const mouseOver = (message) => {\n        renderPreview(message);\n    }\n\n    const mouseLeave = (message) => {\n        renderPreview(null);\n        data.map((item, index) => {\n            item.messages.map(message => {\n                if (message.current == true) {\n                    renderPreview(message);\n                }\n            })\n        });\n    }\n\n    const renderPreview = (message) => {\n        clearTimeout(timeoutCannedMessage);\n\n        let element = document.getElementById('chat-render-preview-'+props.chatId);\n\n        if (!element) {\n            return;\n        }\n\n        if (message === null) {\n            element.innerHTML = '';\n            return;\n        }\n\n        element.innerHTML = message.msg;\n\n        const formData = new FormData();\n        formData.append('msg', message.msg);\n        formData.append('msg_body', true);\n\n        timeoutCannedMessage = setTimeout(() => {\n            axios.post(WWW_DIR_JAVASCRIPT + 'chat/previewmessage/', formData).then((result) => {\n                element && (element.innerHTML = result.data);\n            });\n        }, 100);\n    }\n\n    const isVisible = (lookInId, elementId, settings) => {\n        let lookIn = document.getElementById(lookInId);\n        let element = document.getElementById(elementId);\n        return (lookIn.offsetHeight + lookIn.scrollTop) >= (element.offsetTop + settings.threshold) && (element.offsetTop > lookIn.scrollTop - settings.threshold)\n    };\n\n    useEffect(() => {\n        data.map((item, index) => {\n            item.messages.map(message => {\n                if (message.current) {\n                    let messageElement = document.getElementById('canned-msg-'+props.chatId+'-'+message.id);\n                    if (messageElement != null && !isVisible('canned-list-'+props.chatId,'canned-msg-'+props.chatId+'-'+message.id,{threshold:10})) {\n                        messageElement.scrollIntoView();\n                    }\n                }\n            })\n        });\n    });\n\n    useEffect(() => {\n\n        function sendManualMessage(chatId, messageId) {\n            if (props.chatId == chatId) {\n                axios.get(WWW_DIR_JAVASCRIPT  + \"cannedmsg/filter/\" + props.chatId).then(result => {\n\n                    if (!isLoaded) {\n                        setData(result.data);\n                        renderPreview(null);\n                        setLoaded(true);\n                    }\n\n                    result.data.map((item, index) => {\n                        item.messages.map(message => {\n                            if (message.id == messageId) {\n                                fillAndSend(message);\n                            }\n                        })\n                    });\n                });\n            }\n        }\n\n        ee.addListener('sendCannedByMessageId',sendManualMessage)\n        \n        // Canned component was mounted event\n        ee.emitEvent('chatCannedMounted', [props.chatId]);\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('sendCannedByMessageId', sendManualMessage);\n        };\n\n    },[]);\n\n    const applyFilter = (e, doSearch) => {\n\n        if ((e.keyCode == 13 || e.keyCode == 38 || e.keyCode == 40) && doSearch == true){\n            e.preventDefault();\n            e.stopPropagation();\n            return;\n        }\n\n        if (e.keyCode == 27) {\n            let element = document.getElementById('CSChatMessage-' + props.chatId);\n            if (element.nodeName == 'LHC-EDITOR') {\n                element.setFocus();\n            } else {\n                element.focus();\n            }\n\n            setCollapsed(true);\n        }\n\n        if (e.keyCode == 13) {\n            data.map((item, index) => (\n                item.messages.map(message => {\n                    if (message.current) {\n                        let element = document.getElementById('CSChatMessage-' + props.chatId);\n                        if (element.nodeName == 'LHC-EDITOR') {\n                            element.setContent(message.msg,{\"convert_bbcode\" : true});\n                            element.setFocus();\n                        } else {\n                            element.value = message.msg;\n                            element.focus();\n                        }\n\n                        message.subject_ids && element.setAttribute('subjects_ids',message.subject_ids);\n                        element.setAttribute('canned_id',message.id);\n                        setCollapsed(true);\n                    }\n                })\n            ));\n            e.preventDefault();\n            e.stopPropagation();\n        } else if (e.keyCode == 38) { // Up\n\n            var messageSet = false;\n\n            // Very first is current message\n            if (typeof data[0] !== 'undefined' && data[0]['messages'][0].current == true) {\n                data[0]['messages'][0].current = false;\n                let index = data.length - 1;\n                data[index]['messages'][data[index]['messages'].length - 1].current = true;\n                renderPreview(data[index]['messages'][data[index]['messages'].length - 1]);\n\n                if (!data[index].expanded) {\n                    data[index].expanded = true;\n                }\n            } else {\n                data.map((val, index, array) => (\n                    array[array.length - 1 - index].messages.map((messageValue, indexMessages, arrayMessages) => {\n                            let message = arrayMessages[arrayMessages.length - 1 - indexMessages]\n                            if (messageSet == true) {\n\n                                if (!array[array.length - 1 - index].expanded) {\n                                    array[array.length - 1 - index].expanded = true;\n                                }\n\n                                message.current = true;\n                                messageSet = false;\n                                renderPreview(message);\n                            } else if (message.current) {\n                                message.current = false;\n                                messageSet = true;\n                            }\n                        }\n                    )\n                ));\n            }\n\n            setData(data);\n            forceUpdate();\n            e.preventDefault();\n            e.stopPropagation();\n\n        } else if (e.keyCode == 40) { // Down\n            var messageSet = false;\n\n            if (typeof data[data.length -1] !== 'undefined' && data[data.length -1]['messages'][ data[data.length -1]['messages'].length -1 ].current == true) {\n                data[data.length -1]['messages'][ data[data.length -1]['messages'].length -1 ].current = false;\n                data[0]['messages'][0].current = true;\n                renderPreview(data[0]['messages'][0]);\n\n                if (!data[0].expanded) {\n                    data[0].expanded = true;\n                }\n\n            } else {\n                data.map((item, index) => {\n                    item.messages.map(message => {\n                        if (messageSet == true) {\n                            if (!item.expanded) {\n                                item.expanded = true;\n                            }\n                            message.current = true;\n                            renderPreview(message);\n                            messageSet = false;\n                        } else if (message.current) {\n                            message.current = false;\n                            messageSet = true;\n                        }\n                    })\n                });\n            }\n\n            setData(data);\n            forceUpdate();\n            e.preventDefault();\n            e.stopPropagation();\n\n        } else if (doSearch === true) {\n\n            clearTimeout(_requestTimeout);\n\n            let valueSearch = e.target.value;\n\n            _requestTimeout = setTimeout(() => {\n\n                if (typeof _cancelToken != typeof undefined) {\n                    _cancelToken.cancel(\"Operation canceled due to new request.\")\n                }\n\n                _cancelToken = axios.CancelToken.source()\n\n                axios.get(WWW_DIR_JAVASCRIPT  + \"cannedmsg/filter/\"+props.chatId + '?q=' + encodeURIComponent(valueSearch),{cancelToken: _cancelToken.token}).then(result => {\n                    setData(result.data);\n                    setCollapsed(false);\n                    renderPreview(null);\n                    result.data.map((item, index) => {\n                        item.messages.map(message => {\n                            if (message.current == true) {\n                                renderPreview(message);\n                            }\n                        })\n                    });\n                }).catch(function (thrown) {\n                    if (axios.isCancel(thrown)) {\n                        // console.log('Request canceled', thrown.message);\n                    } else {\n                        // handle error\n                    }\n                });\n\n            },50);\n        }\n    }\n\n    const { t, i18n } = useTranslation('chat_canned');\n\n    return (\n        <React.Fragment>\n            <div className=\"col-12 col-xl-6 pb-1\">\n\n                {!isLoaded &&\n                <p className=\"border mb-0 mt-0 pb-1 pt-1\"><a className=\"fs13 d-block\" onClick={getRootCategory}><span className=\"material-icons\">expand_more</span>{t('chat_canned.canned')}</a></p>\n                }\n\n                {isLoaded && isCollapsed && <ul className=\"list-unstyled fs13 border mt-0 mx300 mb-0\">\n                    <li className=\"pt-1 pb-1\"><a className=\"d-block\" onClick={(e) => setCollapsed(false)}><span className=\"material-icons\">expand_more</span>{t('chat_canned.canned')}</a></li>\n                </ul>}\n\n                {isLoaded && !isCollapsed &&\n                <ul className=\"list-unstyled fs13 border mt-0 mx300\" id={'canned-list-'+props.chatId}>\n                    <li className=\"border-bottom pt-1 pb-1\"><a onClick={(e) => setCollapsed(true)}><span className=\"material-icons\">expand_less</span>{t('chat_canned.canned')}</a></li>\n                    {data.map((item, index) => (\n                        <li key={'canned-'+index}><a className=\"fw-bold\" key={index} onClick={() => expandCategory(item, index)}><span className=\"material-icons\">{item.expanded ? 'expand_less' : 'expand_more'}</span>{item.title} [{item.messages.length}{item.messages.length >= 50 ? '+' : ''}]</a>\n                            {item.expanded &&\n                            <ul className=\"list-unstyled ms-4\">\n                                {item.messages.map(message => (\n                                    <li key={message.id} className={message.current ? 'fst-italic fw-bold' : ''} id={'canned-msg-'+props.chatId+'-'+message.id}>\n                                        <a className=\"hover-canned d-block user-select-none\" onMouseLeave={(e) => mouseLeave(message)} onMouseEnter={(e) => mouseOver(message)} title={message.msg} onClick={(e) => fillMessage(message)}><span title={t('chat_canned.send_instantly')} onClick={(e) => fillAndSend(message,e)} className=\"material-icons fs12 user-select-none\">send</span> {message.message_title}</a>\n                                    </li>\n                                ))}\n                            </ul>}\n                        </li>\n                    ))}\n                </ul>\n                }\n            </div>\n            <div className=\"col-12 col-xl-6\">\n                <input type=\"text\" onFocus={getRootCategory} className=\"form-control form-control-sm\" onKeyUp={(e) => applyFilter(e, true)} onKeyDown={(e) => applyFilter(e, false)} defaultValue=\"\" placeholder={t('chat_canned.navigate')}/>\n                {!isCollapsed && <div className=\"mx275 mh275 mt-1 break-words\" id={'chat-render-preview-'+props.chatId}></div>}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default CannedMessages"],"names":["_cancelToken","timeoutCannedMessage","_requestTimeout","_messageStoreInProgress","props","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isLoaded","setLoaded","_useReducer","useReducer","x","_useReducer2","forceUpdate","_useState5","_useState6","isCollapsed","setCollapsed","_useState7","_useState8","messageIdStore","setmessageIdStore","getRootCategory","axios","get","WWW_DIR_JAVASCRIPT","chatId","then","result","map","item","index","messages","message","current","renderPreview","fillAndSend","e","stopPropagation","preventDefault","id","confirm","t","setTimeout","formData","FormData","append","msg","hasSubjects","subject_ids","element","document","getElementById","getAttribute","post","headers","confLH","csrf_token","LHCCallbacks","addmsgadmin","ee","emitEvent","lhinst","updateVoteStatus","syncadmincall","error","processRestAPIError","delay","err","isAxiosError","response","alert","JSON","stringify","clearTimeout","innerHTML","useEffect","messageElement","lookInId","elementId","settings","threshold","lookIn","offsetHeight","scrollTop","offsetTop","scrollIntoView","sendManualMessage","messageId","addListener","removeListener","applyFilter","doSearch","keyCode","nodeName","setFocus","focus","setContent","value","setAttribute","messageSet","length","expanded","val","array","messageValue","indexMessages","arrayMessages","valueSearch","target","_typeof","cancel","CancelToken","source","encodeURIComponent","cancelToken","token","thrown","isCancel","_useTranslation","useTranslation","i18n","React","className","onClick","key","indexUpdate","categoryUpdate","category","title","onMouseLeave","onMouseEnter","mouseOver","insertContent","fillMessage","message_title","type","onFocus","onKeyUp","onKeyDown","defaultValue","placeholder"],"sourceRoot":""}