{"version":3,"file":"672.10b0443f332293de541d.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/DashboardChatTabs.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from 'react-i18next';\nimport useInterval from \"./lib/useInterval\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'attr_remove_mail':\n            var foundIndex = state.mails.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.mails[foundIndex] = { ...state.mails[foundIndex], ...action.value};\n            state = { ... state};\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                if (action.static_order === true) {\n\n                    var insertIndex = state.chats.findIndex(x => x.id > action.value.id);\n\n                    if (insertIndex === -1) {\n                        state.chats.push(action.value);\n                    } else {\n                        state.chats.splice(insertIndex, 0, action.value);\n                    }\n\n                } else {\n                    state.chats.unshift(action.value);\n                }\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'add_mail': {\n            var foundIndex = state.mails.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                state.mails.unshift(action.value);\n            } else {\n                state.mails[foundIndex].active = true;\n            }\n            return { ...state}\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'remove_mail': {\n            var foundIndex = state.mails.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.mails.splice(foundIndex,1);\n            return { ...state}\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = {...state.chats[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'update_mail': {\n            var foundIndex = state.mails.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.mails[foundIndex] = {...state.mails[foundIndex], ...action.value}\n            return { ...state}\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-'+action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Push to very first if it's not static order\n            if (action.static_order === false) {\n                // Set last appended messages as first array element\n                state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n            }\n\n            return { ...state}\n        }\n\n        case 'refocus_mail': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = false;\n            }\n            var foundIndex = state.mails.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.mails[foundIndex].id) {\n                    return state;\n                }\n                state.mails[foundIndex].active = false;\n            }\n\n            var foundIndex = state.mails.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.mails[foundIndex].active = true;\n            }\n\n            return { ...state}\n        }\n\n        case 'refocus': {\n            var foundIndex = state.mails.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                state.mails[foundIndex].active = false;\n            }\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state}\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return {...state};\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst DashboardChatTabs = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        mails: [],\n        group_offline : false\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const getChatIds = () => {\n        var chatIds = [];\n        state.chats.map((chat, index) => chatIds.push(chat.id));\n        return chatIds;\n    }\n\n    const loadChatTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n\n            result.data.map((chat, index) => {\n\n                // If nodeJS extension is enabled check chat live status\n                // As on page reload react app can be yet not started and we might not receive event\n                // at that moment react app starts\n                var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                if (nodeJSStatus !== null) {\n                    chat.live_status = nodeJSStatus.textContent == 'wifi';\n                }\n\n                if (!chat.nb) {\n                    chat.nb = false;\n                }\n\n                if (!chat.nc) {\n                    chat.nc = null;\n                }\n\n                if (!chat.aicons) {\n                    chat.aicons = {};\n                }\n\n                dispatch({\n                    type: 'update_chat',\n                    id: chat.id,\n                    value: chat\n                })\n\n            })\n        });\n    }\n\n\n    const loadMailTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(idmail)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n            result.data.map((chat, index) => {\n                dispatch({\n                    type: 'update_mail',\n                    id: chat.id,\n                    value: chat\n                })\n            })\n        });\n    }\n\n    if (!document.getElementById('tabs') && !document.getElementById('views-home')) {\n        useInterval(() => {\n\n            if (!state.chats || state.chats.length == 0) {\n                return;\n            }\n\n            axios.get(WWW_DIR_JAVASCRIPT  + \"front/tabs/(id)/\" + getChatIds().join('/')).then(result => {\n                result.data.map((chat, index) => {\n\n                    // If nodeJS extension is enabled check chat live status\n                    // As on page reload react app can be yet not started and we might not receive event\n                    // at that moment react app starts\n                    var nodeJSStatus = document.getElementById('node-js-indicator-'+chat.id);\n                    if (nodeJSStatus !== null) {\n                        chat.live_status = nodeJSStatus.textContent == 'wifi';\n                    }\n\n                    if (!(!state.chats || state.chats.length == 0)) {\n                        var foundIndex = state.chats.findIndex(x => x.id == chat.id);\n                        if (foundIndex !== -1 ) {\n                            if (state.chats[foundIndex].lmsg_id !== chat.lmsg_id) {\n                                chat.mn = 1;\n                            } else {\n                                chat.mn = state.chats[foundIndex].mn;\n                            }\n                        }\n                    }\n\n                    dispatch({\n                        type: 'update_chat',\n                        id: chat.id,\n                        value: chat\n                    })\n\n                })\n            });\n\n        }, 1000);\n    }\n\n    useEffect(() => {\n\n        function addTabPreload(chatId, params) {\n\n            if (!(!chatsRef.current.chats || chatsRef.current.chats.length == 0) && chatsRef.current.chats.findIndex(x => x.id == chatId) !== -1) {\n                return; // We already have this chat tab\n            }\n\n            addTab(chatId, params);\n        }\n\n        function addTab(chatId, params) {\n            if (params.focus) {\n\n                dispatch({\n                    type: 'attr_remove',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\" : false\n                    }\n                });\n\n                dispatch({\n                    type: 'attr_remove_mail',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\" : false\n                    }\n                });\n            }\n\n            dispatch({\n                type: 'add',\n                static_order: props.static_order,\n                value: {\n                    \"id\" : chatId,\n                    active: params.focus\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function addTabBackground(chatId, params) {\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\" : chatId,\n                    static_order: props.static_order,\n                    active: false,\n                    mn : 1\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function updateChatTab(params) {\n            if (!(!chatsRef.current.chats || chatsRef.current.chats.length == 0) && chatsRef.current.chats.findIndex(x => x.id == params.id) !== -1) {\n                loadChatTabIntro([params.id]);\n            }\n        }\n\n        function mailContentLoaded(chatId) {\n            addMailTab(chatId);\n        }\n\n        function addMailTab(chatId, params) {\n            dispatch({\n                type: 'attr_remove_mail',\n                id: true,\n                attr: 'active',\n                value: {\n                    \"active\" : false\n                }\n            });\n\n            dispatch({\n                type: 'attr_remove',\n                id: true,\n                attr: 'active',\n                value: {\n                    \"active\" : false\n                }\n            });\n\n            dispatch({\n                type: 'add_mail',\n                value: {\n                    \"id\" : chatId.replace('mc',''),\n                    active: true\n                }\n            });\n\n            loadMailTabIntro([chatId.replace('mc','')]);\n        }\n\n        function removeTab(chatId) {\n            dispatch({\n                type: 'remove',\n                id: chatId\n            });\n        }\n\n        function removeMailTab(chatId) {\n            dispatch({\n                type: 'remove_mail',\n                id: chatId.replace('mc','')\n            });\n        }\n\n        function tabClicked(chatId) {\n\n            if (typeof chatId == 'string' && chatId.indexOf('mc') !== -1) {\n                mailTabClicked(chatId.replace('mc',''));\n                return;\n            }\n\n            dispatch({\n                type: 'refocus',\n                id: chatId\n            });\n        }\n\n        function mailTabClicked(chatId) {\n            dispatch({\n                type: 'refocus_mail',\n                id: chatId\n            });\n        }\n\n        function chatAdminSync(data) {\n\n            dispatch({\n                type: 'group_offline',\n                value: lhinst.hidenicknamesstatus\n            })\n\n            Object.keys(data.result_status).map((key) => {\n                dispatch({\n                    type: 'update_chat',\n                    id: data.result_status[key].chat_id,\n                    value: data.result_status[key]\n                })\n            });\n\n            if (data.result !== 'false') {\n                Object.keys(data.result).map((key) => {\n                    dispatch({\n                        type: 'msg_received',\n                        id: data.result[key].chat_id,\n                        value: {msg: data.result[key].msg, mn: data.result[key].mn},\n                        order_chats: props.static_order\n                    })\n                });\n            }\n        }\n\n        function supportUnreadChat(params) {\n            if (params.id && params.unread == true) {\n                dispatch({\n                    type: 'update_chat',\n                    id: params.id,\n                    value: {support_chat: true}\n                })\n            }\n        }\n\n        function typingVisitor(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'true','tx' : params.txt}\n            })\n        }\n\n        function typingVisitorStopped(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {tp: 'false'}\n            })\n        }\n\n        function nodeJsVisitorStatus(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: {live_status: params.status}\n            })\n        }\n\n        function activateNextTab(chatid,up) {\n            var index = chatsRef.current.chats.findIndex(x => x.active == true);\n            if (index === -1) { return; }\n            if ((chatsRef.current.chats.length - 1) > index && up == false) {\n                chatTabClick(chatsRef.current.chats[index + 1]);\n            } else if (index > 0 && up == true) {\n                chatTabClick(chatsRef.current.chats[index - 1]);\n            }\n        }\n\n        ee.addListener('chatStartTab',addTab)\n        ee.addListener('chatTabPreload',addTabPreload)\n        ee.addListener('chatStartBackground',addTabBackground)\n        ee.addListener('removeSynchroChat',removeTab)\n        ee.addListener('chatTabClicked',tabClicked)\n        ee.addListener('chatTabFocused',tabClicked)\n        ee.addListener('chatAdminSync',chatAdminSync)\n        ee.addListener('supportUnreadChat',supportUnreadChat)\n        ee.addListener('nodeJsTypingVisitor',typingVisitor)\n        ee.addListener('nodeJsTypingVisitorStopped',typingVisitorStopped)\n        ee.addListener('nodeJsVisitorStatus',nodeJsVisitorStatus)\n        ee.addListener('activateNextTab',activateNextTab)\n        ee.addListener('updateChatTab',updateChatTab)\n\n        // Mail module\n        ee.addListener('unloadMailChat',removeMailTab)\n        ee.addListener('mailChatTabLoaded',addMailTab)\n        ee.addListener('mailChatTabClicked',mailTabClicked)\n        ee.addListener('mailChatContentLoaded',mailContentLoaded)\n\n        if (localStorage) {\n            var achat_id = localStorage.getItem('achat_id');\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',').map(Number);\n\n                if (props.static_order == true) {\n                    ids.sort(function(a, b){return a - b});\n                }\n\n                var entries = [];\n                ids.forEach((id) => {\n                   var el = document.getElementById('chat-tab-link-'+id);\n                   if (parseInt(id) > 0) {\n                       entries.push({id: parseInt(id), active: el !== null && el.classList.contains('active')})\n                   }\n               });\n               dispatch({\n                    type: 'update',\n                    value: {\n                        \"chats\" : entries\n                    }\n                });\n               ids.length > 0 && loadChatTabIntro(ids);\n\n               // Find active chat\n               setTimeout(() => {\n                   ids.forEach((id) => {\n                       var el = document.getElementById('chat-tab-link-'+id);\n                       if (el !== null) {\n                           el.classList.contains('active') && tabClicked(parseInt(id));\n                       }\n                   });\n               },1000);\n            }\n\n            var achat_id = localStorage.getItem('machat_id');\n\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',');\n                var entries = [];\n                ids.forEach((id) => {\n                   var el = document.getElementById('chat-tab-link-mc'+id);\n                   if (el !== null) {\n                       var active = el.classList.contains('active');\n                       entries.push({id: parseInt(id), active: active})\n                   }\n               });\n               dispatch({\n                    type: 'update',\n                    value: {\n                        \"mails\" : entries\n                    }\n                });\n               ids.length > 0 && loadMailTabIntro(ids);\n\n               // Find active chat\n               setTimeout(() => {\n                   ids.forEach((id) => {\n                       var el = document.getElementById('chat-tab-link-mc'+id);\n                       if (el !== null) {\n                           el.classList.contains('active') && mailTabClicked(parseInt(id));\n                       }\n                   });\n               },1000);\n            }\n         }\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('chatStartTab', addTab);\n            ee.removeListener('chatStartBackground', addTabBackground);\n            ee.removeListener('removeSynchroChat', removeTab);\n            ee.removeListener('chatTabClicked', tabClicked);\n            ee.removeListener('chatTabFocused', tabClicked);\n            ee.removeListener('chatAdminSync', chatAdminSync);\n            ee.removeListener('supportUnreadChat', chatAdminSync);\n            ee.removeListener('nodeJsTypingVisitor', typingVisitor);\n            ee.removeListener('nodeJsTypingVisitorStopped', typingVisitorStopped);\n            ee.removeListener('nodeJsVisitorStatus', nodeJsVisitorStatus);\n            ee.removeListener('activateNextTab', activateNextTab);\n            ee.removeListener('updateChatTab',updateChatTab);\n\n            ee.removeListener('unloadMailChat', removeMailTab);\n            ee.removeListener('mailChatTabLoaded', addMailTab);\n            ee.removeListener('mailChatTabClicked', mailTabClicked);\n            ee.removeListener('mailChatContentLoaded', mailContentLoaded);\n        };\n\n    },[]);\n\n    const chatTabClick = (chat) => {\n        if (document.getElementById('chat-tab-link-'+chat.id) !== null) {\n            $('#chat-tab-link-'+chat.id).click();\n            (new bootstrap.Tab(document.querySelector('#chat-tab-link-'+chat.id))).show();\n            } else {\n            document.location = WWW_DIR_JAVASCRIPT + 'front/default/(cid)/' + chat.id + '/#!#chat-id-' + chat.id;\n        }\n    }\n\n    const mailTabClick = (chat) => {\n        $('#chat-tab-link-mc'+chat.id).click();\n        (new bootstrap.Tab(document.querySelector('#chat-tab-link-mc'+chat.id))).show();\n    }\n\n    const closeDialog = (e,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTab(chat.id,$('#tabs'),true);\n        lhinst.channel && lhinst.channel.postMessage({'action':'close_chat','args':{'chat_id' : chat.id}});\n    }\n\n    const closeMailDialog = (e,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTabMail('mc'+chat.id,$('#tabs'),true)\n    }\n\n    const iconClick = (e,icon,chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (icon.has_popup) {\n            lhc.revealModal({'url':WWW_DIR_JAVASCRIPT + 'chat/icondetailed/' + chat.id + '/' + icon.icon_id});\n        }\n    }\n\n    const { t, i18n } = useTranslation('chat_tabs');\n\n    return (\n        <React.Fragment>\n            {(!state.chats || state.chats.length == 0) && <div className=\"text-center text-muted p-2\"><span className=\"material-icons\">chat</span>{t('chat_tabs.open_chats')}</div>}\n            {state.chats.map((chat, index) => (\n\n                <div key={\"chat-\"+chat.id} title={chat.id} onClick={() => chatTabClick(chat)} className={\"p-1 action-image chat-tabs-row\"+(chat.active ? ' chat-tab-active' : '')+(chat.vwa ? ' long-response-chat' : '')}>\n                        <div className=\"fs12\">\n\n                            <button type=\"button\" onClick={(e) => closeDialog(e,chat)} className=\"float-end btn-link m-0 ms-1 p-0 btn btn-xs\"><i className=\"material-icons me-0\">close</i></button>\n                            {chat.dep && <span className=\"float-end text-muted text-truncate mw-80px\">\n                                {chat.cs == 0 && <span title={t('chat_tabs.pending_status')} className=\"material-icons chat-pending me-0\">chat</span>}\n                                {chat.cs == 1 && <span title={t('chat_tabs.active_status')} className=\"material-icons chat-active me-0\">chat</span>}\n                                {chat.cs == 5 && <span title={t('chat_tabs.bot_status')} className=\"material-icons chat-active me-0\">android</span>}\n                                {chat.cs == 2 && <span title={t('chat_tabs.closed_status')} className=\"material-icons chat-closed me-0\">chat</span>}\n\n                                <span className=\"d-none d-lg-inline\"><span className=\"material-icons\" title={chat.dep}>home</span>{chat.dep}</span>\n\n                            </span>}\n\n                            <span className={\"material-icons\"+(chat.pnd_rsp == true ? ' text-danger' : ' text-success')}>{chat.pnd_rsp == true ? 'call_received' : 'call_made'}</span>\n                            {chat.adicons && chat.adicons.map((icon, index) => <span onClick={(event) => iconClick(event,icon,chat)} style={{'color': icon.color}} className=\"material-icons\" title={icon.title}>{icon.icon}</span>)}\n                            {chat.aicons && Object.keys(chat.aicons).map((key, index) => <React.Fragment>\n                                    {chat.aicons[key].i.includes('/') && <img className=\"me-1\" title={chat.aicons[key].t || chat.aicons[key].i} src={chat.aicons[key].i}/>}\n                                    {!chat.aicons[key].i.includes('/') && <span style={{'color': chat.aicons[key].c ? chat.aicons[key].c : \"#1d548e;\"}} className=\"material-icons\" title={chat.aicons[key].t || chat.aicons[key].i}>{chat.aicons[key].i}</span>}\n                                </React.Fragment>)}\n                            {chat.vwa && <span title={chat.vwa} className=\"d-none d-lg-inline material-icons text-danger\">timer</span>}\n                            {chat.support_chat && <span className=\"whatshot blink-ani text-warning material-icons\">whatshot</span>}<i className={\"material-icons \"+(typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'icon-user-online' : 'icon-user-offline') : (chat.us == 2 ? \"icon-user-away\" : (chat.us == 0 ? \"icon-user-online\" : \"icon-user-offline\")))}  >{typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'wifi' : 'wifi_off') : (chat.us == 2 ? \"wifi_1_bar\" : (chat.us == 0 ? \"wifi\" : \"wifi_off\"))}</i><i className={\"material-icons icon-user-online \" + (chat.um == 1 ? \"icon-user-offline\" : \"icon-user-online\")}>send</i>{chat.cc && <img className=\"d-none d-lg-inline\" title={chat.cn} src={chat.cc} alt=\"\" />} {(state.group_offline == false || !(chat.us != 0)) && <span  style={{color: chat.nc ? chat.nc : null}}  className={\"small-truncate-nick \"+(chat.nb || chat.mn > 0 || chat.cs == 0 ? \"fw-bold \" : '') + (chat.cs == 0 ? 'text-danger' : '')}>{chat.nick || chat.id}</span>}{chat.mn > 0 && <span className=\"msg-nm ps-1\">({chat.mn})</span>}{chat.lmsg && <span className=\"d-none d-xl-inline text-muted\"> {chat.lmsg}</span>}\n\n\n                            {chat.co == confLH.user_id && <span className=\"d-none d-lg-inline float-end text-muted\"><span title={t('chat_tabs.chat_owner')} className=\"material-icons\">account_box</span></span>}\n                        </div>\n\n                        {(chat.msg || (chat.tp == 'true' && chat.tx)) && <div className=\"fs13 text-muted pt-1\">\n                            <span title={chat.tp == 'true' && chat.tx ? chat.tx : chat.msg} className={\"d-none d-lg-inline-block text-truncate mw-100 \"+(chat.mn > 0 ? 'fw-bold' : '')+(chat.tp == 'true' && chat.tx ? ' fst-italic': '')}>\n                                {chat.tp == 'true' && chat.tx ? chat.tx : chat.msg}\n                            </span>\n                        </div>}\n                </div>\n            ))}\n\n            {state.mails.map((chat, index) => (\n                <div key={\"mail-\"+chat.id} title={chat.id} onClick={() => mailTabClick(chat)} className={\"p-1 action-image chat-tabs-row\"+(chat.active ? ' chat-tab-active' : '')}>\n                    <div className=\"fs12\">\n                        <span title={chat.from_name} ><i className=\"material-icons\">mail_outline</i>{chat.from_address}</span>\n\n                        <button type=\"button\" onClick={(e) => closeMailDialog(e,chat)} className=\"float-end btn-link m-0 ms-1 p-0 btn btn-xs\"><i className=\"material-icons me-0\">close</i></button>\n                        {chat.dep && <span className=\"float-end text-muted text-truncate mw-80px\"><span className=\"material-icons\">home</span>{chat.dep}</span>}\n                        {chat.co == confLH.user_id && <span className=\"float-end text-muted\"><span title={t('chat_tabs.chat_owner')} className=\"material-icons\">account_box</span></span>}\n                    </div>\n                    <span title={chat.nick} className=\"fs13 text-muted pt-1 d-inline-block text-truncate mw-100\">\n                        {chat.nick}\n                    </span>\n                </div>\n            ))}\n\n        </React.Fragment>\n    );\n}\n\nexport default DashboardChatTabs","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","_objectSpread","value","attr","mails","static_order","insertIndex","push","splice","unshift","active","mn","support_chat","msg","el","document","getElementById","classList","contains","group_offline","Error","props","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","chatsRef","useRef","useEffect","current","getChatIds","chatIds","map","chat","index","loadChatTabIntro","axios","get","WWW_DIR_JAVASCRIPT","join","then","result","data","nodeJSStatus","live_status","textContent","nb","nc","aicons","loadMailTabIntro","useInterval","length","lmsg_id","addTab","chatId","params","focus","addTabBackground","updateChatTab","mailContentLoaded","addMailTab","replace","removeTab","removeMailTab","tabClicked","indexOf","mailTabClicked","chatAdminSync","lhinst","hidenicknamesstatus","Object","keys","result_status","key","chat_id","order_chats","typingVisitor","tp","txt","typingVisitorStopped","nodeJsVisitorStatus","status","activateNextTab","chatid","up","chatTabClick","ee","addListener","unread","localStorage","achat_id","getItem","ids","split","Number","sort","a","b","entries","forEach","parseInt","setTimeout","removeListener","$","click","bootstrap","Tab","querySelector","show","location","_useTranslation","useTranslation","t","i18n","React","className","title","onClick","vwa","e","preventDefault","stopPropagation","removeDialogTab","channel","postMessage","closeDialog","dep","cs","pnd_rsp","adicons","icon","event","has_popup","lhc","revealModal","icon_id","iconClick","style","color","i","includes","src","c","us","um","cc","cn","alt","nick","lmsg","co","confLH","user_id","tx","mailTabClick","from_name","from_address","removeDialogTabMail","closeMailDialog","callback","delay","savedCallback","setInterval","clearInterval"],"sourceRoot":""}