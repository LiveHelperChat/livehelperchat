{"version":3,"file":"610.2f6a4a0ba85d98d0ea43.js","mappings":"uUAWMA,GANLC,EAAAA,EAAAA,KAAQ,SAACC,GACN,MAAO,CACHC,WAAYD,EAAMC,cAFlB,e,6aAYJ,WAAYC,GAAO,yBACf,cAAMA,GADS,mBAJX,IAIW,E,yCAInB,SAAcC,EAAOC,GAAG,WACpBC,KAAKC,MAAMH,EAAM,gBAAgBI,SAAQ,SAACC,GACtC,GAAmB,iBAAfA,EAAKC,OACLC,SAASC,cAAcH,EAAKI,QAAQC,UAAUC,IAAIN,EAAKO,YACpD,GAAmB,oBAAfP,EAAKC,OACZC,SAASC,cAAcH,EAAKI,QAAQC,UAAUG,OAAOR,EAAKO,YACvD,GAAmB,oBAAfP,EAAKC,OACZQ,OAAOC,QAAQV,EAAKI,QAAUJ,EAAKO,WAChC,GAAmB,aAAfP,EAAKC,OAAuB,CACnC,IAAIU,EAAS,GACbA,EAAOX,EAAKI,QAAUJ,EAAKO,MAC3B,EAAKb,MAAMkB,eAAeD,S,oBAKtC,WAAS,WACDE,EAAOC,KAAKpB,MAAMD,WAAWsB,MAAM,CAAC,UAAUD,KAAKpB,MAAMsB,OAM7D,OAJKF,KAAKpB,MAAMuB,UACZJ,EAAOA,EAAKK,QAAS,qCAAsC,KAI3D,gBAAC,WAAD,KACKpB,GAAAA,CAAMe,EAAM,CACTK,QAAS,SAAAC,GACL,IAAIC,EAAYC,OAAOC,OAAO,GAAIH,EAAQI,SAC1C,GAAIJ,EAAQI,SACJJ,EAAQK,MAAyB,WAAjBL,EAAQK,KACxB,OAAO,8BAAQC,KAAK,UAAaN,EAAQI,QAAlC,CAA2CG,QAAS,SAAC9B,GAAD,OAAO,EAAK+B,cAAcP,EAAWxB,OAAKgC,EAAAA,EAAAA,YAAWT,EAAQU,mB,EA9ChJ,CAMiBC,EAAAA,aAAAA,EAiDzB","sources":["webpack://LHCReactAPP/./src/components/CustomHTML.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport parse, { domToReact } from 'html-react-parser';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass CustomHTML extends Component {\n\n    state = {\n\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    abstractClick(attrs, e) {\n        JSON.parse(attrs['data-action']).forEach((item) => {\n            if (item.action == 'add_css_class') {\n                document.querySelector(item.target).classList.add(item.value);\n            } else if (item.action == 'remove_css_class') {\n                document.querySelector(item.target).classList.remove(item.value);\n            } else if (item.action == 'chat_attr_global') {\n                window.lhcChat[item.target] = item.value;\n            } else if (item.action == 'set_state') {\n                var params = {};\n                params[item.target] = item.value;\n                this.props.setStateParent(params);\n            }\n        });\n    }\n\n    render() {\n        let html = this.props.chatwidget.getIn(['chat_ui',this.props.attr]);\n\n        if (!this.props.has_new) {\n            html = html.replace( /<newmessages>(.*)<\\/newmessages>/gi, \"\");\n        }\n\n        return (\n            <React.Fragment>\n                {parse(html, {\n                    replace: domNode => {\n                        var cloneAttr = Object.assign({}, domNode.attribs);\n                        if (domNode.attribs) {\n                            if (domNode.name && domNode.name === 'button') {\n                                return <button type=\"button\" {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)}>{domToReact(domNode.children)}</button>\n                            }\n                        }\n                    }})}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CustomHTML;"],"names":["CustomHTML","connect","store","chatwidget","props","attrs","e","JSON","parse","forEach","item","action","document","querySelector","target","classList","add","value","remove","window","lhcChat","params","setStateParent","html","this","getIn","attr","has_new","replace","domNode","cloneAttr","Object","assign","attribs","name","type","onClick","abstractClick","domToReact","children","Component"],"sourceRoot":""}