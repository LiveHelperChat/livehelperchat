{"version":3,"file":"a92366215ad3e9b74e1c.js","mappings":"yNA6FMA,EAAqB,IA1FF,WAOpB,OAAAC,EAAAA,EAAAA,IAND,SAAAC,KAAcC,EAAAA,EAAAA,GAAA,KAAAD,GACVE,KAAKC,OAAS,CAAC,EACfD,KAAKE,mBAAqB,KAC1BF,KAAKG,gBAAkB,KACvBH,KAAKI,WAAa,KAClBJ,KAAKK,WAAa,CACtB,GAAC,EAAAC,IAAA,2BAAAC,MAED,WAA2B,IAAAC,EAAA,KACvB,GAAIR,KAAKC,OAAuB,eAAG,CAE/B,IAAIQ,EAAe,WACfD,EAAKE,sBACT,EAEIV,KAAKC,OAAoB,cACzBU,EAAAA,EAAiBC,OAAOC,OAAQ,YAAaJ,EAAc,mBAC3DE,EAAAA,EAAiBC,OAAOE,SAAU,YAAaL,EAAc,oBAGjEE,EAAAA,EAAiBC,OAAOC,OAAQ,YAAaJ,EAAc,iBAC3DE,EAAAA,EAAiBC,OAAOC,OAAQ,QAASJ,EAAc,aACvDE,EAAAA,EAAiBC,OAAOC,OAAQ,SAAUJ,EAAc,cACxDE,EAAAA,EAAiBC,OAAOC,OAAQ,WAAYJ,EAAc,gBAC1DE,EAAAA,EAAiBC,OAAOC,OAAQ,OAAQJ,EAAc,YACtDE,EAAAA,EAAiBC,OAAOE,SAAU,SAAUL,EAAc,cAC1DE,EAAAA,EAAiBC,OAAOE,SAAU,aAAcL,EAAc,kBAC9DE,EAAAA,EAAiBC,OAAOE,SAAU,WAAYL,EAAc,gBAE5DT,KAAKU,sBACT,CACJ,GAAC,CAAAJ,IAAA,uBAAAC,MAED,WAAuB,IAAAQ,EAAA,KACfC,EAAiC,GAAnBhB,KAAKK,WAEvBL,KAAKK,WAAa,EAEC,GAAfW,GACAhB,KAAKiB,eAAe,GAGxBC,aAAalB,KAAKG,iBAElBH,KAAKG,gBAAkBgB,YAAW,WAC9BJ,EAAKV,WAAa,EAClBU,EAAKE,eAAe,EACxB,GAAG,IACP,GAAC,CAAAX,IAAA,YAAAC,MAED,SAAUN,EAAQG,GACdJ,KAAKC,OAASA,EACdD,KAAKI,WAAaA,EAClBJ,KAAKoB,2BACLpB,KAAKqB,gBACT,GAAC,CAAAf,IAAA,iBAAAC,MAED,WAAiB,IAAAe,EAAA,KACbJ,aAAalB,KAAKE,oBAClBF,KAAKE,mBAAqBiB,YAAW,WACjCG,EAAKL,eAAe,GACpBK,EAAKD,gBACT,GAA4B,IAAzBrB,KAAKC,OAAgB,QAC5B,GAAC,CAAAK,IAAA,iBAAAC,MAED,SAAegB,GAAQ,IAAAC,EAAA,KACbC,EAAazB,KAAKI,WAAwB,YAAEsB,uBAE9CzB,EAAS,CACT,IAAOD,KAAKI,WAAWuB,YAAYC,SACnC,MAAU5B,KAAKI,WAAWyB,aAAatB,MAAQ,EAAI,EACnD,QAAWgB,EACX,OAAUvB,KAAKK,WACf,IAAOL,KAAKI,WAAW0B,WAAWC,KAAK,MAGvCN,EAAe,IAAKA,EAAiB,OACrCxB,EAAa,KAAIwB,EAAe,GAAI,IAAMA,EAAiB,MAG/DO,EAAAA,EAAgBC,YAAYjC,KAAKI,WAAW8B,QAAQC,KAAKC,aAAepC,KAAKI,WAAiB,KAAI,gCAAiC,CAACH,OAAQA,IAAS,SAACoC,GACxH,GAAtBA,EAAKC,eAAyBd,EAAKpB,WAAWmC,aAAahC,OAAS8B,EAAKG,QACzEhB,EAAKpB,WAAWmC,aAAaE,KAAKJ,EAAKG,OAE/C,GACJ,IAAC,CAtFoB,G","sources":["webpack://LiveHelperChat/./src/util/activityMonitoring.js"],"sourcesContent":["import {domEventsHandler} from '../util/domEventsHandler';\nimport {helperFunctions} from '../lib/helperFunctions';\n\nclass _activityMonitoring {\n    constructor() {\n        this.params = {};\n        this.timeoutStatuscheck = null;\n        this.timeoutActivity = null;\n        this.attributes = null;\n        this.userActive = 1;\n    }\n\n    attatchActivityListeners() {\n        if (this.params['track_activity']) {\n\n            var resetTimeout = () => {\n                this.resetTimeoutActivity();\n            };\n\n            if (this.params['track_mouse']) {\n                domEventsHandler.listen(window, 'mousemove', resetTimeout, 'lhc_mousemove_w');\n                domEventsHandler.listen(document, 'mousemove', resetTimeout, 'lhc_mousemove_d');\n            }\n\n            domEventsHandler.listen(window, 'mousedown', resetTimeout, 'lhc_mousedown');\n            domEventsHandler.listen(window, 'click', resetTimeout, 'lhc_click');\n            domEventsHandler.listen(window, 'scroll', resetTimeout, 'lhc_scroll');\n            domEventsHandler.listen(window, 'keypress', resetTimeout, 'lhc_keypress');\n            domEventsHandler.listen(window, 'load', resetTimeout, 'lhc_load');\n            domEventsHandler.listen(document, 'scroll', resetTimeout, 'lhc_scroll');\n            domEventsHandler.listen(document, 'touchstart', resetTimeout, 'lhc_touchstart');\n            domEventsHandler.listen(document, 'touchend', resetTimeout, 'lhc_touchend');\n\n            this.resetTimeoutActivity();\n        }\n    }\n\n    resetTimeoutActivity() {\n        var wasInactive = this.userActive == 0;\n\n        this.userActive = 1;\n\n        if (wasInactive == true) {\n            this.syncUserStatus(1);\n        }\n\n        clearTimeout(this.timeoutActivity);\n\n        this.timeoutActivity = setTimeout(() => {\n            this.userActive = 0;\n            this.syncUserStatus(1);\n        }, 300 * 1000);\n    }\n\n    setParams(params, attributes) {\n        this.params = params;\n        this.attributes = attributes;\n        this.attatchActivityListeners();\n        this.initMonitoring();\n    }\n\n    initMonitoring() {\n        clearTimeout(this.timeoutStatuscheck);\n        this.timeoutStatuscheck = setTimeout(() => {\n            this.syncUserStatus(0);\n            this.initMonitoring();\n        }, this.params['timeout'] * 1000);\n    }\n\n    syncUserStatus(sender) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        let params = {\n            'vid': this.attributes.userSession.getVID(),\n            'wopen': (this.attributes.widgetStatus.value ? 1 : 0),\n            'uaction': sender,\n            'uactiv': this.userActive,\n            'dep': this.attributes.department.join(',')\n        };\n\n        if (chatParams['id'] && chatParams['hash']) {\n            params['hash'] = chatParams['id'] + '_' + chatParams['hash'];\n        }\n\n        helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/chatcheckstatus', {params: params}, (data) => {\n            if (data.change_status == true && this.attributes.onlineStatus.value != data.online) {\n                this.attributes.onlineStatus.next(data.online);\n            }\n        });\n    }\n\n}\n\nconst activityMonitoring = new _activityMonitoring();\nexport {activityMonitoring};"],"names":["activityMonitoring","_createClass","_activityMonitoring","_classCallCheck","this","params","timeoutStatuscheck","timeoutActivity","attributes","userActive","key","value","_this","resetTimeout","resetTimeoutActivity","domEventsHandler","listen","window","document","_this2","wasInactive","syncUserStatus","clearTimeout","setTimeout","attatchActivityListeners","initMonitoring","_this3","sender","_this4","chatParams","getSessionAttributes","userSession","getVID","widgetStatus","department","join","helperFunctions","makeRequest","LHC_API","args","lhc_base_url","data","change_status","onlineStatus","online","next"],"sourceRoot":""}