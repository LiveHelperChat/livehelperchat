{"version":3,"file":"610.985691599ed1bad42b93.js","mappings":"uUAWMA,GANLC,EAAAA,EAAAA,KAAQ,SAACC,GACN,MAAO,CACHC,WAAYD,EAAMC,cAFlB,e,6aAYJ,WAAYC,GAAO,yBACf,cAAMA,GADS,mBAJX,CACJC,iBAAmB,KAKnB,EAAKC,eAAgB,EAFN,E,+CAKnB,SAAoBC,EAAGC,GACnB,GAAID,EAAEE,KAAKC,OAASF,EAAKG,OAAQ,CAC7B,IAAIC,EAAQ,GACZA,EAAML,EAAC,KAAD,OAAsBA,EAAC,KAAD,MAC5BM,KAAKC,SAASF,M,2BAItB,SAAcG,EAAOR,GAAG,WACpBS,KAAKC,MAAMF,EAAM,gBAAgBG,SAAQ,SAACV,GACtC,GAAmB,iBAAfA,EAAKW,OACLC,SAASC,cAAcb,EAAKG,QAAQW,UAAUC,IAAIf,EAAKI,YACpD,GAAmB,oBAAfJ,EAAKW,OACZC,SAASC,cAAcb,EAAKG,QAAQW,UAAUE,OAAOhB,EAAKI,YACvD,GAAmB,oBAAfJ,EAAKW,OACZM,OAAOC,QAAQlB,EAAKG,QAAUH,EAAKI,WAChC,GAAmB,aAAfJ,EAAKW,OAAuB,CACnC,IAAIQ,EAAS,GACbA,EAAOnB,EAAKG,QAAUH,EAAKI,MAC3B,EAAKR,MAAMwB,eAAeD,OACJ,gBAAfnB,EAAKW,OACZC,SAASS,eAAerB,EAAKG,QAAQmB,cAAcC,YAAYvB,EAAKI,MAAM,KACpD,uBAAfJ,EAAKW,SACRM,OAAOO,iBAEPP,OAAOO,iBAAiB,WAAW,SAACC,GAAS,EAAKC,oBAAoBD,EAAIzB,MAAQ,GAC1EiB,OAAOU,YAEfV,OAAOU,YAAY,aAAa,SAACF,GAAS,EAAKC,oBAAoBD,EAAIzB,MAC/DY,SAASe,aAEjBf,SAASe,YAAY,aAAa,SAACF,GAAS,EAAKC,oBAAoBD,EAAIzB,Y,oBAMzF,WAAS,WACD4B,EAAOvB,KAAKT,MAAMD,WAAWkC,MAAM,CAAC,UAAUxB,KAAKT,MAAMkC,OAU7D,OARKzB,KAAKT,MAAMmC,UACZH,EAAOA,EAAKI,QAAS,qCAAsC,KAG/D3B,KAAK4B,MAAMpC,iBAAiBa,SAAQ,SAAAwB,GAChCN,EAAOA,EAAKI,QAAQE,EAAKC,OAAQD,EAAKF,QAAS,OAI/C,gBAAC,WAAD,KACKvB,GAAAA,CAAMmB,EAAM,CACTI,QAAS,SAAAI,GACL,IAAIC,EAAYC,OAAOC,OAAO,GAAIH,EAAQI,SAC1C,GAAIJ,EAAQI,QAAS,CACjB,GAAIJ,EAAQK,MAAyB,WAAjBL,EAAQK,KACxB,OAAO,8BAAQC,KAAK,UAAaN,EAAQI,QAAlC,CAA2CG,QAAS,SAAC5C,GAAD,OAAO,EAAK6C,cAAcP,EAAWtC,OAAK8C,EAAAA,EAAAA,YAAWT,EAAQU,WACrH,GAAIV,EAAQK,MAAyB,cAAjBL,EAAQK,KAK/B,OAJ0B,GAAtB,EAAK3C,gBACL,EAAK8C,cAAcP,EAAW,MAC9B,EAAKvC,eAAgB,GAElB,Y,EA9E/B,CAMiBiD,EAAAA,aAAAA,EAiFzB","sources":["webpack://LHCReactAPP/./src/components/CustomHTML.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport parse, { domToReact } from 'html-react-parser';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass CustomHTML extends Component {\n\n    state = {\n        preg_match_rules : []\n    }\n\n    constructor(props) {\n        super(props);\n        this.listenerAdded = false;\n    }\n\n    handleParentMessage(e, item) {\n        if (e.data.event == item.target) {\n            let value = [];\n            value[e['data']['event']] = e['data']['value'];\n            this.setState(value);\n        }\n    }\n\n    abstractClick(attrs, e) {\n        JSON.parse(attrs['data-action']).forEach((item) => {\n            if (item.action == 'add_css_class') {\n                document.querySelector(item.target).classList.add(item.value);\n            } else if (item.action == 'remove_css_class') {\n                document.querySelector(item.target).classList.remove(item.value);\n            } else if (item.action == 'chat_attr_global') {\n                window.lhcChat[item.target] = item.value;\n            } else if (item.action == 'set_state') {\n                var params = {};\n                params[item.target] = item.value;\n                this.props.setStateParent(params);\n            } else if (item.action == 'post_message') {\n                document.getElementById(item.target).contentWindow.postMessage(item.value,'*');\n            } else if (item.action == 'listen_post_message') {\n                if (window.addEventListener) {\n                    // FF\n                    window.addEventListener(\"message\", (evt) => {this.handleParentMessage(evt,item)}, false);\n                } else if ( window.attachEvent ) {\n                    // IE\n                    window.attachEvent(\"onmessage\", (evt) => {this.handleParentMessage(evt,item)});\n                } else if ( document.attachEvent ) {\n                    // IE\n                    document.attachEvent(\"onmessage\", (evt) => {this.handleParentMessage(evt,item)});\n                };\n            }\n        });\n    }\n\n    render() {\n        let html = this.props.chatwidget.getIn(['chat_ui',this.props.attr]);\n\n        if (!this.props.has_new) {\n            html = html.replace( /<newmessages>(.*)<\\/newmessages>/gi, \"\");\n        }\n        \n        this.state.preg_match_rules.forEach(rule => {\n            html = html.replace(rule.search, rule.replace, \"\");\n        });\n\n        return (\n            <React.Fragment>\n                {parse(html, {\n                    replace: domNode => {\n                        var cloneAttr = Object.assign({}, domNode.attribs);\n                        if (domNode.attribs) {\n                            if (domNode.name && domNode.name === 'button') {\n                                return <button type=\"button\" {...domNode.attribs} onClick={(e) => this.abstractClick(cloneAttr, e)}>{domToReact(domNode.children)}</button>\n                            } else if (domNode.name && domNode.name === 'lhcaction') {\n                                if (this.listenerAdded == false) {\n                                    this.abstractClick(cloneAttr, null);\n                                    this.listenerAdded = true;\n                                }\n                                return \"\";\n                            }\n                        }\n                    }})}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CustomHTML;"],"names":["CustomHTML","connect","store","chatwidget","props","preg_match_rules","listenerAdded","e","item","data","event","target","value","this","setState","attrs","JSON","parse","forEach","action","document","querySelector","classList","add","remove","window","lhcChat","params","setStateParent","getElementById","contentWindow","postMessage","addEventListener","evt","handleParentMessage","attachEvent","html","getIn","attr","has_new","replace","state","rule","search","domNode","cloneAttr","Object","assign","attribs","name","type","onClick","abstractClick","domToReact","children","Component"],"sourceRoot":""}