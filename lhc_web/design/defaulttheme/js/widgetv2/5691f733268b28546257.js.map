{"version":3,"file":"5691f733268b28546257.js","mappings":"6oBAGMA,gBAAe,WACjB,SAAAA,mBAAcC,EAAAA,mEAAAA,GAAA,KAAAD,iBACVE,KAAKC,OAAS,CAAC,CACnB,CAAC,OAAAC,EAAAA,gEAAAA,GAAAJ,gBAAA,EAAAK,IAAA,YAAAC,MAED,SAAUH,EAAQI,GACdL,KAAKC,OAASA,EACdD,KAAKK,WAAaA,EAClBL,KAAKM,gBACT,GAAC,CAAAH,IAAA,iBAAAC,MAED,SAAAE,iBAAiB,IAAAC,MAAA,KACbP,KAAKC,OAAW,GAAU,OAAEO,SAAQ,SAACC,UACjCF,MAAKF,WAAWK,aAAaC,YAAYF,SAASG,IAAI,SAACX,QAEnD,IAAIY,KAAOC,KAAKC,MAAMD,KAAKE,UAAUP,WAErC,GAAe,kBAAXI,KAAKD,SAA4C,IAAXX,SAA0BA,OAAOgB,KAA3E,CAIA,IAAIC,MAAQL,KAAKM,GAGjB,GAAe,iBAAXN,KAAKD,SAA2C,IAAXX,OACrCY,KAAKD,GAAKX,OAAOW,GAAKC,KAAKD,GAC3BC,KAAKO,GAAKnB,OAAOmB,IAAMP,KAAKO,GAC5BP,KAAKQ,GAAKpB,OAAOoB,IAAMR,KAAKQ,GAC5BH,MAAQjB,OAAOkB,IAAMN,KAAKM,QACvB,GAAgB,kBAAXN,KAAKD,IAAqC,kBAAXC,KAAKD,IAAqC,kBAAXC,KAAKD,IAAqC,oBAAXC,KAAKD,SAA+C,IAAXX,SAA0BA,OAAOqB,MAE5K,GAAe,cAAXT,KAAKD,GACZ,YAAsB,IAAXX,QAA0BA,OAAOsB,SAAWtB,OAAOsB,QAAQC,OAAS,OAC3EvB,OAAOsB,QAAQf,SAAQ,SAACiB,cACpB,IAAIC,GAAKnB,MAAKN,OAAW,GAAM,GAAE0B,QAC7B,yBAAyBb,KAAKE,UAAUH,KAAKO,KAC/CO,QACE,uBAAuBb,KAAKE,UAAUH,KAAKQ,KAC7CM,QACE,sBAAsBb,KAAKE,UAAUS,eACvCE,QACE,yBAAyBb,KAAKE,UAAUH,KAAKD,KAGjD,IACIgB,KAAKF,GACT,CAAE,MAAOG,GACLC,QAAQC,IAAIF,EAChB,CACJ,SAGA,OAtBJX,MAAQA,OAASjB,OAAOqB,KA0B3B,IAAII,GAAKnB,MAAKN,OAAW,GAAM,GAAE0B,QAC7B,yBAAyBb,KAAKE,UAAUH,KAAKO,KAC/CO,QACE,uBAAuBb,KAAKE,UAAUH,KAAKQ,KAC7CM,QACE,sBAAsBb,KAAKE,UAAUE,QACvCS,QACE,yBAAyBb,KAAKE,UAAUH,KAAKD,KAIjD,IACIgB,KAAKF,GACT,CAAE,MAAOG,GACNC,QAAQC,IAAIF,EACf,CApDD,CAsDJ,GACJ,GACJ,IAAC,CA3EgB,GAgFfG,eAAiB,IAAIlC,e","sources":["webpack://LiveHelperChat/./src/util/analyticEvents.js"],"sourcesContent":["import {domEventsHandler} from '../util/domEventsHandler';\nimport {helperFunctions} from '../lib/helperFunctions';\n\nclass _analyticEvents {\n    constructor() {\n        this.params = {};\n    }\n\n    setParams(params, attributes) {\n        this.params = params;\n        this.attributes = attributes;\n        this.initMonitoring();\n    }\n\n    initMonitoring() {\n        this.params['ga']['events'].forEach((itemList) => {\n            this.attributes.eventEmitter.addListener(itemList.ev, (params) => {\n\n                var item = JSON.parse(JSON.stringify(itemList));\n\n                if (item.ev == 'hideInvitation' && typeof params !== 'undefined' && params.full) {\n                    return ;\n                }\n\n                var label = item.el;\n\n                // Set invitation name\n                if (item.ev == 'trackingEvent' && typeof params !== 'undefined') {\n                    item.ev = params.ev | item.ev;\n                    item.ec = params.ec || item.ec;\n                    item.ea = params.ea || item.ea;\n                    label = params.el || item.el;\n                } else if ((item.ev == 'showInvitation' || item.ev == 'readInvitation' || item.ev == 'fullInvitation' || item.ev == 'cancelInvitation') && typeof params !== 'undefined' && params.name) {\n                    label = label || params.name;\n                } else if (item.ev == 'botTrigger') {\n                    if (typeof params !== 'undefined' && params.trigger && params.trigger.length > 0) {\n                        params.trigger.forEach((triggerLabel) => {\n                            var js = this.params['ga']['js'].replace(\n                                /\\{\\{eventCategory\\}\\}/g,JSON.stringify(item.ec)\n                            ).replace(\n                                /\\{\\{eventAction\\}\\}/g,JSON.stringify(item.ea)\n                            ).replace(\n                                /\\{\\{eventLabel\\}\\}/g,JSON.stringify(triggerLabel)\n                            ).replace(\n                                /\\{\\{eventInternal\\}\\}/g,JSON.stringify(item.ev)\n                            );\n\n                            try {\n                                eval(js);\n                            } catch (err) {\n                                console.log(err);\n                            }\n                        });\n                        return ;\n                    } else {\n                        return;\n                    }\n                }\n\n                 var js = this.params['ga']['js'].replace(\n                     /\\{\\{eventCategory\\}\\}/g,JSON.stringify(item.ec)\n                 ).replace(\n                     /\\{\\{eventAction\\}\\}/g,JSON.stringify(item.ea)\n                 ).replace(\n                     /\\{\\{eventLabel\\}\\}/g,JSON.stringify(label)\n                 ).replace(\n                     /\\{\\{eventInternal\\}\\}/g,JSON.stringify(item.ev)\n                 );\n\n\n                 try {\n                     eval(js);\n                 } catch (err) {\n                    console.log(err);\n                 }\n\n            });\n        });\n    }\n\n\n}\n\nconst analyticEvents = new _analyticEvents();\nexport {analyticEvents};"],"names":["_analyticEvents","_classCallCheck","this","params","_createClass","key","value","attributes","initMonitoring","_this","forEach","itemList","eventEmitter","addListener","ev","item","JSON","parse","stringify","full","label","el","ec","ea","name","trigger","length","triggerLabel","js","replace","eval","err","console","log","analyticEvents"],"sourceRoot":""}