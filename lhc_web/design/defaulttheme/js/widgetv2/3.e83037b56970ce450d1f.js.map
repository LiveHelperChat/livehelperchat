{"version":3,"sources":["webpack://LHCReactAPP/./src/components/OfflineChat.js"],"names":["OfflineChat","connect","store","chatwidget","props","state","dispatch","initOfflineForm","get","handleSubmit","bind","handleContentChange","handleContentChangeCustom","event","fields","this","getIn","helperFunctions","getTimeZone","window","location","href","substring","protocol","length","customFields","getCustomFieldsSubmit","submitData","submitOfflineForm","preventDefault","obj","currentState","id","value","setState","size","map","dep","data","prefillFields","field","prevProps","prevState","snapshot","document","getElementById","headerContent","offsetHeight","sendMessageParent","t","className","role","has","mappedFields","chatUI","isInvalid","hasIn","attrPrefill","defaultValueField","onChangeContent","mappedFieldsCustom","key","dangerouslySetInnerHTML","__html","onSubmit","setDefaultValue","departments","type","disabled","Component","withTranslation"],"mappings":"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","file":"3.e83037b56970ce450d1f.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ChatField from './ChatField';\nimport StartChat from './StartChat';\nimport { withTranslation } from 'react-i18next';\nimport { initOfflineForm, submitOfflineForm } from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport ChatDepartment from './ChatDepartment';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass OfflineChat extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        \n        // Init offline form with all attributes\n        this.props.dispatch(initOfflineForm({\n            'department':this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'bot_id' : this.props.chatwidget.get('bot_id'),\n            'online' : 0\n        }));\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.handleContentChangeCustom = this.handleContentChangeCustom.bind(this);\n    }\n\n    handleSubmit(event) {\n\n        var fields = this.state;\n        fields['jsvar'] = this.props.chatwidget.get('jsVars');\n        fields['captcha_' + this.props.chatwidget.getIn(['captcha','hash'])] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['tscaptcha'] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['user_timezone'] = helperFunctions.getTimeZone();\n        fields['URLRefer'] = window.location.href.substring(window.location.protocol.length);\n        fields['r'] = this.props.chatwidget.get('ses_ref');\n\n        if (this.props.chatwidget.get('operator') != '') {\n            fields['operator'] = this.props.chatwidget.get('operator');\n        }\n        \n        if (this.props.chatwidget.get('priority') !== null) {\n            fields['priority'] = this.props.chatwidget.get('priority');\n        }\n\n        const customFields = helperFunctions.getCustomFieldsSubmit(this.props.chatwidget.getIn(['customData','fields']));\n        if (customFields !== null) {\n            fields = {...fields, ...customFields};\n        }\n\n        let submitData = {\n            'department': this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'vid' : this.props.chatwidget.get('vid'),\n            'fields' : fields\n        };\n\n        this.props.dispatch(submitOfflineForm(submitData));\n        event.preventDefault();\n    }\n\n    handleContentChange(obj) {\n        var currentState = this.state;\n        currentState[obj.id] = obj.value;\n        this.setState(currentState);\n\n        if (obj.id == 'DepartamentID') {\n            if (this.props.chatwidget.getIn(['offlineData','department','departments']).size > 0){\n                this.props.chatwidget.getIn(['offlineData','department','departments']).map(dep => {\n                    if (dep.get('value') == obj.value) {\n                        if (dep.get('online') == true) {\n                            this.props.dispatch({'type' : 'dep_default', data : obj.value});\n                            this.props.dispatch({'type' : 'onlineStatus', data : true});\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        helperFunctions.prefillFields(this);\n    }\n\n    handleContentChangeCustom(obj) {\n        this.props.dispatch({'type' : 'CUSTOM_FIELDS_ITEM', data : {id : obj.field.get('index'), value : obj.value}});\n    }\n    \n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (document.getElementById('id-container-fluid')) {\n\n            var headerContent = 0;\n\n            if (document.getElementById('widget-header-content')){\n                headerContent = document.getElementById('widget-header-content').offsetHeight;\n            }\n\n            helperFunctions.sendMessageParent('widgetHeight', [{\n                'height' : document.getElementById('id-container-fluid').offsetHeight + headerContent + 10\n            }]);\n        }\n    }\n    \n    render() {\n\n        const { t } = this.props;\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === true && this.props.chatwidget.getIn(['offlineData','disabled']) === true) {\n            return (\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\n                    {t('start_chat.cant_start_a_chat')}\n                </div>\n            )\n        }\n\n        \n        \n        if (this.props.chatwidget.get('offlineData').has('fields')) {\n            var mappedFields = this.props.chatwidget.getIn(['offlineData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} attrPrefill={{'attr_prefill_admin' : this.props.chatwidget.get('attr_prefill_admin'), 'attr_prefill' : this.props.chatwidget.get('attr_prefill')}} defaultValueField={this.state[field.get('name')] || field.get('value')} onChangeContent={this.handleContentChange} field={field} />);\n        } else {\n            var mappedFields = \"\";\n        }\n\n        if (this.props.chatwidget.getIn(['customData','fields']).size > 0) {\n            var mappedFieldsCustom = this.props.chatwidget.getIn(['customData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} key={field.get('identifier')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} defaultValueField={field.get('value')} onChangeContent={this.handleContentChangeCustom} field={field} />);\n        } else {\n            var mappedFieldsCustom = \"\";\n        }\n\n        if (this.props.chatwidget.get('processStatus') == 0 || this.props.chatwidget.get('processStatus') == 1) {\n            return (\n                  <div id=\"id-container-fluid\">\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    {!this.props.chatwidget.get('leave_message') && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\">{this.props.chatwidget.getIn(['chat_ui','chat_unavailable'])}</p>}\n\n                    {this.props.chatwidget.get('leave_message') &&\n                    <div className=\"container-fluid\" >\n                        <form onSubmit={this.handleSubmit} className=\"offline-form\">\n                            <div className=\"row pt-2\">\n                                {mappedFields}\n                                {mappedFieldsCustom}\n                                {this.props.chatwidget.hasIn(['offlineData','department']) && <ChatDepartment defaultValueField={this.state['DepartamentID']} setDefaultValue={this.props.chatwidget.get('departmentDefault')} onChangeContent={this.handleContentChange} isInvalid={this.props.chatwidget.hasIn(['validationErrors','department'])} departments={this.props.chatwidget.getIn(['offlineData','department'])} />}\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-12 pb-2\">\n                                    <button type=\"submit\" disabled={this.props.chatwidget.get('processStatus') == 1} className=\"btn btn-secondary btn-sm\">{this.props.chatwidget.get('processStatus') == 1 && <i className=\"material-icons\">&#xf113;</i>}{this.props.chatwidget.getIn(['chat_ui','custom_start_button']) || t('start_chat.leave_a_message')}</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>}\n                      \n                      \n                  </div>\n            )\n        } else if (this.props.chatwidget.get('processStatus') == 2) {\n            return (\n                <div id=\"id-container-fluid\">\n\n                {this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                {this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && <p className=\"pb-1 mb-0 pt-2 px-3 font-weight-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"pt-2\">{this.props.chatwidget.getIn(['chat_ui','thank_feedback']) || t('start_chat.thank_you_for_feedback')}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(OfflineChat);\n"],"sourceRoot":""}