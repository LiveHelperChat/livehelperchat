{"version":3,"file":"476.492cf88486f77fd0edeb.js","mappings":"g6BAgBMA,GANLC,EAAAA,EAAAA,KAAQ,SAACC,GACN,MAAO,CACHC,WAAYD,EAAMC,cAFlB,e,6aAQJ,WAAYC,GAAO,0BACf,cAAMA,IAEDC,MAAQ,GAEb,EAAKC,sBAEL,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,QACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,QAC3B,EAAKE,0BAA4B,EAAKA,0BAA0BF,KAA/B,QACjC,EAAKG,SAAW,EAAKA,SAASH,KAAd,QAVD,E,+CAanB,SAAoBI,GAEhBC,KAAKT,MAAMU,UAASC,EAAAA,EAAAA,IAAgB,CAChC,WAAaF,KAAKT,MAAMD,WAAWa,IAAI,cACvC,MAAUH,KAAKT,MAAMD,WAAWa,IAAI,SACpC,KAASH,KAAKT,MAAMD,WAAWa,IAAI,QACnC,OAAWH,KAAKT,MAAMD,WAAWa,IAAI,UACrC,WAAeH,KAAKT,MAAMD,WAAWa,IAAI,cACzC,OAAW,EACX,YAAiBJ,GAAeC,KAAKT,MAAMD,WAAWa,IAAI,sBAAwB,O,0BAI1F,SAAaC,GAET,IAAIC,EAASL,KAAKR,MACdc,GAAU,EACRC,EAAW,IAAIC,cAES,IAAnBH,EAAM,OACbC,GAAU,EACVC,EAASE,OAAO,OAAQJ,EAAM,KAAUA,EAAM,KAASK,OAG3DL,EAAM,MAAYL,KAAKT,MAAMD,WAAWa,IAAI,UAC5CE,EAAO,WAAaL,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,UAAYX,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,OAC9GN,EAAM,UAAgBL,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,OAC7DN,EAAM,cAAoBO,EAAAA,EAAAA,cAC1BP,EAAM,SAAe,GACrB,IACI,IAAIQ,EAAaC,OAAOC,OAAOC,WAAaF,OAAOC,OAAOA,OAAOC,SAGjE,QAFyC,IAAlBF,OAAOG,SAAqD,SAA1BH,OAAOG,QAAP,MAA+D,SAA1BH,OAAOG,QAAP,MAAyD,OAAlBH,OAAOI,QAAmBJ,OAAOC,OAAOG,OAEzKL,EACAR,EAAM,SAAeU,OAAOC,SAASG,KAAKC,UAAUL,OAAOC,SAASK,SAASC,YAC1E,CACH,IAAIC,EAAa,KAEbA,EADkB,OAAlBT,OAAOI,OACMJ,OAAOI,OAEPJ,OAAOC,OAExBV,EAAM,SAAekB,EAAWP,SAASG,KAAKC,UAAUG,EAAWP,SAASK,SAASC,SAG3F,MAAOE,GACL,IACInB,EAAM,SAAeoB,OAAOX,OAAOY,SAASV,UAC9C,MAAOQ,KAKa,SAAtBnB,EAAM,WACNA,EAAM,SAAe,IAGzBA,EAAM,EAAQL,KAAKT,MAAMD,WAAWa,IAAI,WAEK,IAAzCH,KAAKT,MAAMD,WAAWa,IAAI,cAC1BE,EAAM,SAAeL,KAAKT,MAAMD,WAAWa,IAAI,aAGL,OAA1CH,KAAKT,MAAMD,WAAWa,IAAI,cAC1BE,EAAM,SAAeL,KAAKT,MAAMD,WAAWa,IAAI,aAGnD,IAAMwB,EAAef,EAAAA,EAAAA,sBAAsCZ,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,aAAa,YAChF,OAAjBgB,IACAtB,EAAS,EAAH,KAAOA,GAAWsB,IAG5B,IAAIC,EAAa,CACb,WAAc5B,KAAKT,MAAMD,WAAWa,IAAI,cACxC,MAAUH,KAAKT,MAAMD,WAAWa,IAAI,SACpC,KAASH,KAAKT,MAAMD,WAAWa,IAAI,QACnC,IAAQH,KAAKT,MAAMD,WAAWa,IAAI,OAClC,OAAWE,GAGXC,GACAC,EAASE,OAAO,WAAYoB,KAAKC,UAAUF,IAG/C5B,KAAKT,MAAMU,UAAS8B,EAAAA,EAAAA,IAAkBzB,EAAUC,EAAWqB,IAC3DxB,EAAM4B,mB,iCAGV,SAAoBC,GAAK,WACjBC,EAAelC,KAAKR,MACxB0C,EAAaD,EAAIE,IAAMF,EAAIG,MAC3BpC,KAAKqC,SAASH,GAEA,iBAAVD,EAAIE,IACAnC,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,aAAa,gBAAgB2B,KAAO,GAC/EtC,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,aAAa,gBAAgB4B,KAAI,SAAAC,GACpEA,EAAIrC,IAAI,UAAY8B,EAAIG,QACC,GAArBI,EAAIrC,IAAI,YACR,EAAKZ,MAAMU,SAAS,CAAC,KAAS,cAAewC,KAAOR,EAAIG,QACxD,EAAK7C,MAAMU,SAAS,CAAC,KAAS,eAAgBwC,MAAO,KAIrD,EAAKlD,MAAMD,WAAWqB,MAAM,CAAC,aAAa,eAAiBsB,EAAIG,OAC/D,EAAK3C,oBAAoBwC,EAAIG,a,+BASrD,WACIxB,EAAAA,EAAAA,cAA8BZ,Q,uCAGlC,SAA0BiC,GACtBjC,KAAKT,MAAMU,SAAS,CAAC,KAAS,qBAAsBwC,KAAO,CAACN,GAAKF,EAAIS,MAAMvC,IAAI,SAAUiC,MAAQH,EAAIG,W,sBAGzG,WACIpC,KAAKT,MAAMU,SAAS,CAAC0C,KAAO,WAAYC,KAAO,CAAC,iBAAkBH,MAAM,M,gCAG5E,SAAmBI,EAAWC,EAAWC,GACrC,GAAIrB,SAASsB,eAAe,sBAAuB,CAE/C,IAAIC,EAAgB,EAEhBvB,SAASsB,eAAe,2BACxBC,EAAgBvB,SAASsB,eAAe,yBAAyBE,cAGrEtC,EAAAA,EAAAA,kBAAkC,eAAgB,CAAC,CAC/C,OAAWc,SAASsB,eAAe,sBAAsBE,aAAeD,EAAgB,S,oBAKpG,WAAS,WAEGE,EAAMnD,KAAKT,MAAX4D,EAER,IAA+D,IAA3DnD,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,cAAoF,IAA5DX,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,aAC9G,OACI,uBAAKyC,UAAU,yBAAyBC,KAAK,SACxCF,EAAE,iCAKf,IAA+D,IAA3DnD,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,YAE3C,OAAO,KAGX,GAAIX,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,aACvC,OAAO,gBAAC,IAAD,CAAW2C,UAAWH,EAAE,gBAAiBI,aAAa,EAAMC,MAAO,SAAChC,GAAD,OAAO,EAAKjC,MAAMU,UAASwD,EAAAA,EAAAA,KAAe,KAAQC,SAAS,EAAMC,KAAM3D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,eAG5L,GAAIX,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,WAAW2B,KAAO,EAC7D,IAAIsB,EAAe5D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,WAAW4B,KAAI,SAAAG,GAAK,OAAG,gBAAC,IAAD,CAAWmB,OAAQ,EAAKtE,MAAMD,WAAWa,IAAI,WAAY2D,gBAAiB,EAAKvE,MAAMD,WAAWyE,MAAM,CAAC,mBAAmBrB,EAAMvC,IAAI,gBAAkB,EAAKZ,MAAMD,WAAWqB,MAAM,CAAC,mBAAmB+B,EAAMvC,IAAI,gBAAkB,KAAM6D,UAAW,EAAKzE,MAAMD,WAAWyE,MAAM,CAAC,mBAAmBrB,EAAMvC,IAAI,gBAAiB8D,YAAa,CAAC,mBAAuB,EAAK1E,MAAMD,WAAWa,IAAI,sBAAuB,aAAiB,EAAKZ,MAAMD,WAAWa,IAAI,iBAAkB+D,kBAAmB,EAAK1E,MAAMkD,EAAMvC,IAAI,UAAYuC,EAAMvC,IAAI,SAAUgE,gBAAiB,EAAKvE,oBAAqB8C,MAAOA,YAE5pBkB,EAAe,GAGvB,GAAI5D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,aAAa,WAAW2B,KAAO,EAC5D,IAAI8B,EAAqBpE,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,aAAa,WAAW4B,KAAI,SAAAG,GAAK,OAAG,gBAAC,IAAD,CAAWmB,OAAQ,EAAKtE,MAAMD,WAAWa,IAAI,WAAYkE,IAAK3B,EAAMvC,IAAI,cAAe2D,gBAAiB,EAAKvE,MAAMD,WAAWyE,MAAM,CAAC,mBAAmBrB,EAAMvC,IAAI,gBAAkB,EAAKZ,MAAMD,WAAWqB,MAAM,CAAC,mBAAmB+B,EAAMvC,IAAI,gBAAkB,KAAM6D,UAAW,EAAKzE,MAAMD,WAAWyE,MAAM,CAAC,mBAAmBrB,EAAMvC,IAAI,gBAAiB+D,kBAAmBxB,EAAMvC,IAAI,SAAUgE,gBAAiB,EAAKtE,0BAA2B6C,MAAOA,YAEjhB0B,EAAqB,GAG7B,OAAkD,GAA9CpE,KAAKT,MAAMD,WAAWa,IAAI,kBAAuE,GAA9CH,KAAKT,MAAMD,WAAWa,IAAI,iBAEvE,uBAAKgC,GAAG,sBACLnC,KAAKT,MAAMD,WAAWa,IAAI,mBAAqBH,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,mBAAsB/D,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,sBAAuF,IAA/D/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,uBAAgC,uBAAKyC,UAAU,mCAAmCkB,wBAAyB,CAACC,QAAQvE,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,kBAAoB/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,kBAAoB,KAAOX,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,qBAAuB/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,qBAAuB,OAE/jBX,KAAKT,MAAMD,WAAWa,IAAI,kBAAoBH,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,mBAAiF,IAA5D/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,mBAA2B,qBAAGyC,UAAU,4CAA4CkB,wBAAyB,CAACC,OAAOvE,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,sBAE5SX,KAAKT,MAAMD,WAAWa,IAAI,kBAAoB,qBAAGiD,UAAU,6CAA6CpD,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,sBAEhJX,KAAKT,MAAMD,WAAWa,IAAI,kBAC3B,uBAAKiD,UAAU,mBACX,wBAAMoB,SAAUxE,KAAKN,aAAc0D,UAAU,gBACzC,uBAAKA,UAAU,YACVQ,EACAQ,EACApE,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,cAAc,gBAAkB,gBAAC,IAAD,CAAgBG,kBAAmBlE,KAAKR,MAAL,cAA6BiF,gBAAiBzE,KAAKT,MAAMD,WAAWa,IAAI,qBAAsBgE,gBAAiBnE,KAAKJ,oBAAqBoE,UAAWhE,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,mBAAmB,eAAgBW,YAAa1E,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,cAAc,oBAE9WX,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,cAAuC,KAAvBK,GAA8C,KAAjBR,IAAwB,uBAAKR,UAAU,OAC1H,uBAAKA,UAAU,eACX,0BAAQT,KAAK,SAASgC,SAAwD,GAA9C3E,KAAKT,MAAMD,WAAWa,IAAI,iBAAuBiD,UAAU,4BAA0E,GAA9CpD,KAAKT,MAAMD,WAAWa,IAAI,kBAAyB,qBAAGiD,UAAU,kBAAb,KAA4CpD,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,yBAA2BwC,EAAE,gCAC/O,IAA1CnD,KAAKT,MAAMD,WAAWa,IAAI,cAAuE,IAA/CH,KAAKT,MAAMD,WAAWa,IAAI,kBAA6B,0BAAQwC,KAAK,SAASiC,QAAS5E,KAAKF,SAAUsD,UAAU,4CAAxD,KAA4GD,EAAE,6BAS3L,GAA9CnD,KAAKT,MAAMD,WAAWa,IAAI,iBAE7B,uBAAKgC,GAAG,sBAEPnC,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,sBAAuF,IAA/D/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,sBAA8B,uBAAKyC,UAAU,mCAAmCkB,wBAAyB,CAACC,OAAOvE,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,wBAE9PX,KAAKT,MAAMD,WAAWyE,MAAM,CAAC,UAAU,mBAAiF,IAA5D/D,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,mBAA2B,qBAAGyC,UAAU,iEAAiEkB,wBAAyB,CAACC,OAAOvE,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,qBAEjR,uBAAKyC,UAAU,mBACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,UACX,qBAAGA,UAAU,OAAOkB,wBAAyB,CAACC,OAAOvE,KAAKT,MAAMD,WAAWqB,MAAM,CAAC,UAAU,oBAAsBwC,EAAE,iDAXrI,M,EA/NP,CAMkB0B,EAAAA,aAAAA,EA+O1B,WAAeC,EAAAA,EAAAA,IAAf,CAAiC3F","sources":["webpack://LHCReactAPP/./src/components/OfflineChat.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ChatField from './ChatField';\nimport StartChat from './StartChat';\nimport { withTranslation } from 'react-i18next';\nimport { initOfflineForm, submitOfflineForm, minimizeWidget } from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport ChatDepartment from './ChatDepartment';\nimport ChatAbort from './ChatAbort';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass OfflineChat extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        \n        this.initOfflineFormCall();\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.handleContentChangeCustom = this.handleContentChangeCustom.bind(this);\n        this.goToChat = this.goToChat.bind(this);\n    }\n\n    initOfflineFormCall(dep_default){\n        // Init offline form with all attributes\n        this.props.dispatch(initOfflineForm({\n            'department':this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'bot_id' : this.props.chatwidget.get('bot_id'),\n            'trigger_id' : this.props.chatwidget.get('trigger_id'),\n            'online' : 0,\n            'dep_default' : (dep_default || this.props.chatwidget.get('departmentDefault') || 0),\n        }));\n    }\n\n    handleSubmit(event) {\n\n        var fields = this.state;\n        var hasFile = false;\n        const formData = new FormData();\n\n        if (typeof fields['File'] !== 'undefined') {\n            hasFile = true;\n            formData.append(\"File\", fields['File'], fields['File'].name);\n        }\n\n        fields['jsvar'] = this.props.chatwidget.get('jsVars');\n        fields['captcha_' + this.props.chatwidget.getIn(['captcha','hash'])] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['tscaptcha'] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['user_timezone'] = helperFunctions.getTimeZone();\n        fields['URLRefer'] = '';\n        try {\n            var iframeMode = window.parent.location !== window.parent.parent.location;\n            var popupMode = typeof window.lhcChat != 'undefined' && (window.lhcChat['mode'] == 'popup' || window.lhcChat['mode'] == 'embed') && (window.opener !== null || window.parent.opener !== null);\n\n            if (iframeMode) {\n                fields['URLRefer'] = parent.location.href.substring(parent.location.protocol.length);\n            } else {\n                var instWindow = null;\n                if (window.opener !== null) {\n                    instWindow = window.opener;\n                } else {\n                    instWindow = window.parent;\n                }\n                fields['URLRefer'] = instWindow.location.href.substring(instWindow.location.protocol.length);\n            }\n\n        } catch (e) {\n            try {\n                fields['URLRefer'] = String(window.document.location);\n            } catch (e) {\n                // Do nothing\n            }\n        }\n\n        if (fields['URLRefer'] == 'blank') {\n            fields['URLRefer'] = ''\n        }\n\n        fields['r'] = this.props.chatwidget.get('ses_ref');\n\n        if (this.props.chatwidget.get('operator') != '') {\n            fields['operator'] = this.props.chatwidget.get('operator');\n        }\n        \n        if (this.props.chatwidget.get('priority') !== null) {\n            fields['priority'] = this.props.chatwidget.get('priority');\n        }\n\n        const customFields = helperFunctions.getCustomFieldsSubmit(this.props.chatwidget.getIn(['customData','fields']));\n        if (customFields !== null) {\n            fields = {...fields, ...customFields};\n        }\n\n        let submitData = {\n            'department': this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'vid' : this.props.chatwidget.get('vid'),\n            'fields' : fields\n        };\n\n        if (hasFile) {\n            formData.append('document', JSON.stringify(submitData));\n        }\n\n        this.props.dispatch(submitOfflineForm(hasFile ? formData : submitData));\n        event.preventDefault();\n    }\n\n    handleContentChange(obj) {\n        var currentState = this.state;\n        currentState[obj.id] = obj.value;\n        this.setState(currentState);\n\n        if (obj.id == 'DepartamentID') {\n            if (this.props.chatwidget.getIn(['offlineData','department','departments']).size > 0){\n                this.props.chatwidget.getIn(['offlineData','department','departments']).map(dep => {\n                    if (dep.get('value') == obj.value) {\n                        if (dep.get('online') == true) {\n                            this.props.dispatch({'type' : 'dep_default', data : obj.value});\n                            this.props.dispatch({'type' : 'onlineStatus', data : true});\n                        }\n\n                        // Update online fields settings if different department\n                        if (this.props.chatwidget.getIn(['onlineData','dep_forms']) != obj.value) {\n                            this.initOfflineFormCall(obj.value);\n                        }\n\n                    }\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        helperFunctions.prefillFields(this);\n    }\n\n    handleContentChangeCustom(obj) {\n        this.props.dispatch({'type' : 'CUSTOM_FIELDS_ITEM', data : {id : obj.field.get('index'), value : obj.value}});\n    }\n\n    goToChat() {\n        this.props.dispatch({type : 'attr_set', attr : ['isOfflineMode'], data: false});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (document.getElementById('id-container-fluid')) {\n\n            var headerContent = 0;\n\n            if (document.getElementById('widget-header-content')){\n                headerContent = document.getElementById('widget-header-content').offsetHeight;\n            }\n\n            helperFunctions.sendMessageParent('widgetHeight', [{\n                'height' : document.getElementById('id-container-fluid').offsetHeight + headerContent + 10\n            }]);\n        }\n    }\n    \n    render() {\n\n        const { t } = this.props;\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === true && this.props.chatwidget.getIn(['offlineData','disabled']) === true) {\n            return (\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\n                    {t('start_chat.cant_start_a_chat')}\n                </div>\n            )\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === false)\n        {\n            return null;\n        }\n\n        if (this.props.chatwidget.getIn(['chat_ui','disabled'])) {\n            return <ChatAbort closeText={t('button.close')} full_height={true} close={(e) => this.props.dispatch(minimizeWidget(true))} as_html={true} text={this.props.chatwidget.getIn(['chat_ui','disabled'])} />;\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fields']).size > 0) {\n            var mappedFields = this.props.chatwidget.getIn(['offlineData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} validationError={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')]) ? this.props.chatwidget.getIn(['validationErrors',field.get('identifier')]) : null} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} attrPrefill={{'attr_prefill_admin' : this.props.chatwidget.get('attr_prefill_admin'), 'attr_prefill' : this.props.chatwidget.get('attr_prefill')}} defaultValueField={this.state[field.get('name')] || field.get('value')} onChangeContent={this.handleContentChange} field={field} />);\n        } else {\n            var mappedFields = \"\";\n        }\n\n        if (this.props.chatwidget.getIn(['customData','fields']).size > 0) {\n            var mappedFieldsCustom = this.props.chatwidget.getIn(['customData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} key={field.get('identifier')} validationError={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')]) ? this.props.chatwidget.getIn(['validationErrors',field.get('identifier')]) : null} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} defaultValueField={field.get('value')} onChangeContent={this.handleContentChangeCustom} field={field} />);\n        } else {\n            var mappedFieldsCustom = \"\";\n        }\n\n        if (this.props.chatwidget.get('processStatus') == 0 || this.props.chatwidget.get('processStatus') == 1) {\n            return (\n                  <div id=\"id-container-fluid\">\n                    {this.props.chatwidget.get('leave_message') && (this.props.chatwidget.hasIn(['chat_ui','pre_chat_html']) || (this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '')) && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:(this.props.chatwidget.hasIn(['chat_ui','pre_chat_html']) ? this.props.chatwidget.getIn(['chat_ui','pre_chat_html']) : '') + (this.props.chatwidget.hasIn(['chat_ui','operator_profile']) ? this.props.chatwidget.getIn(['chat_ui','operator_profile']) : '')}}></div>}\n\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    {!this.props.chatwidget.get('leave_message') && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro\">{this.props.chatwidget.getIn(['chat_ui','chat_unavailable'])}</p>}\n\n                    {this.props.chatwidget.get('leave_message') &&\n                    <div className=\"container-fluid\" >\n                        <form onSubmit={this.handleSubmit} className=\"offline-form\">\n                            <div className=\"row pt-2\">\n                                {mappedFields}\n                                {mappedFieldsCustom}\n                                {this.props.chatwidget.hasIn(['offlineData','department']) && <ChatDepartment defaultValueField={this.state['DepartamentID']} setDefaultValue={this.props.chatwidget.get('departmentDefault')} onChangeContent={this.handleContentChange} isInvalid={this.props.chatwidget.hasIn(['validationErrors','department'])} departments={this.props.chatwidget.getIn(['offlineData','department'])} />}\n                            </div>\n                            {(!this.props.chatwidget.hasIn(['chat_ui','hstr_btn']) || mappedFieldsCustom !== \"\" || mappedFields !== \"\") && <div className=\"row\">\n                                <div className=\"col-12 pb-2\">\n                                    <button type=\"submit\" disabled={this.props.chatwidget.get('processStatus') == 1} className=\"btn btn-secondary btn-sm\">{this.props.chatwidget.get('processStatus') == 1 && <i className=\"material-icons\">&#xf113;</i>}{this.props.chatwidget.getIn(['chat_ui','custom_start_button']) || t('start_chat.leave_a_message')}</button>\n                                    {this.props.chatwidget.get('isOnline') === true && this.props.chatwidget.get('isOfflineMode') === true && <button type=\"button\" onClick={this.goToChat} className=\"float-end btn btn-sm btn-link text-muted\">&laquo; {t('button.back_to_chat')}</button>}\n                                </div>\n                            </div>}\n                        </form>\n                    </div>}\n                      \n                      \n                  </div>\n            )\n        } else if (this.props.chatwidget.get('processStatus') == 2) {\n            return (\n                <div id=\"id-container-fluid\">\n\n                {this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '' && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                {this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro offline-intro-filled\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"pt-2\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','thank_feedback']) || t('start_chat.thank_you_for_feedback')}}></p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(OfflineChat);\n"],"names":["OfflineChat","connect","store","chatwidget","props","state","initOfflineFormCall","handleSubmit","bind","handleContentChange","handleContentChangeCustom","goToChat","dep_default","this","dispatch","initOfflineForm","get","event","fields","hasFile","formData","FormData","append","name","getIn","helperFunctions","iframeMode","window","parent","location","lhcChat","opener","href","substring","protocol","length","instWindow","e","String","document","customFields","submitData","JSON","stringify","submitOfflineForm","preventDefault","obj","currentState","id","value","setState","size","map","dep","data","field","type","attr","prevProps","prevState","snapshot","getElementById","headerContent","offsetHeight","t","className","role","closeText","full_height","close","minimizeWidget","as_html","text","mappedFields","chatUI","validationError","hasIn","isInvalid","attrPrefill","defaultValueField","onChangeContent","mappedFieldsCustom","key","dangerouslySetInnerHTML","__html","onSubmit","setDefaultValue","departments","disabled","onClick","Component","withTranslation"],"sourceRoot":""}