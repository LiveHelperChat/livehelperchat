{"version":3,"file":"307.743838d3441f79e939a9.js","mappings":"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","sources":["webpack://LHCReactAPP/./src/components/InlineIframe.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { updateMessageData } from \"../actions/chatActions\";\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass InlineIframe extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    getDocument(a) {\n        return a.contentWindow ? a.contentWindow.document : a.contentDocument ? a.contentDocument : a.document ? a.document : null\n    }\n\n    insertCssRemoteFile(elmDomDoc, attr) {\n\n        var elm = null;\n\n        if (attr.id && attr.href && (elm = elmDomDoc.getElementById(attr.id)) !== null) {\n            elm.href = attr.href\n            return;\n        }\n\n        var d = elmDomDoc.getElementsByTagName(\"head\")[0],\n            k = elmDomDoc.createDocumentFragment(),\n            e = elmDomDoc.createElement('link');\n\n        e.rel = \"stylesheet\";\n        e.crossOrigin = \"*\";\n\n        for (var b in attr) e[b] = attr[b];\n\n        k.appendChild(e);\n        d.appendChild(k);\n    }\n\n    insertJSFile(elmDomDoc, src, async, attr) {\n        var d = elmDomDoc.getElementsByTagName(\"head\")[0],\n            k = elmDomDoc.createDocumentFragment(),\n            e = elmDomDoc.createElement('script');\n\n        e.type = 'text/javascript';\n        if (typeof async === 'undefined' || async === true) {\n            e.async = true;\n        }\n\n        e.crossOrigin = \"*\";\n        e.src = src;\n\n        if (attr) {\n            delete attr['src'];\n            if (typeof attr['async'] !== 'undefined') {\n                delete attr['async'];\n            }\n            Object.keys(attr).forEach(key => {\n                e.setAttribute(key,attr[key]);\n            })\n        }\n\n        k.appendChild(e);\n        d.appendChild(k);\n    }\n\n    prepareIframe(iframe) {\n        let documentFrame = this.getDocument(iframe);\n\n        documentFrame.getElementsByTagName(\"head\")[0].innerHTML = '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />';\n\n        var html = documentFrame.getElementsByTagName(\"html\")[0];\n        html.setAttribute(\"lang\", 'en');\n        html.setAttribute(\"dir\", 'ltr');\n\n        var nodeDoctype = document.implementation.createDocumentType(\n            'html',\n            '',\n            ''\n        );\n\n        if (documentFrame.doctype) {\n            documentFrame.replaceChild(nodeDoctype, documentFrame.doctype);\n        } else {\n            documentFrame.insertBefore(nodeDoctype, documentFrame.childNodes[0]);\n        }\n\n        if (this.props['data-css']) {\n            JSON.parse(this.props['data-css']).forEach((item) => {\n                this.insertCssRemoteFile(documentFrame, item);\n            });\n        }\n\n        if (this.props['data-js']) {\n            JSON.parse(this.props['data-js']).forEach((item) => {\n                this.insertJSFile(documentFrame, item['src'], (item['async'] ? item['async'] : false), item);\n            });\n        }\n\n        documentFrame.body.innerHTML = this.props['data-body'];\n\n        return documentFrame;\n    }\n\n    componentDidMount() {\n        const iframe = document.createElement(\"iframe\");\n\n        iframe.onload = () => {\n            let documentFrame = this.prepareIframe(iframe);\n\n            var closeActions = documentFrame.body.getElementsByClassName('lhc-iframe-close');\n\n            for (let i = 0; i < closeActions.length; i++) {\n                closeActions[i].addEventListener('click',() => {\n                    updateMessageData({\n                        'id' : this.props.chatwidget.getIn(['chatData','id']),\n                        'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n                        'msg_id' : this.props['data-id']\n                    }, {'action' : 'iframe_close'}).then(() => {\n                        this.props.updateMessage(this.props['data-id']);\n                    });\n                });\n            }\n\n            let elmScroll = document.getElementById('messages-scroll');\n            if (elmScroll !== null) {\n                elmScroll.scrollTop = elmScroll.scrollHeight + 1000;\n            }\n\n            if (this.props['data-js-body']) {\n                let js = documentFrame.createElement(\"script\");\n                js.textContent = this.props['data-js-body'];\n                documentFrame.head.appendChild(js);\n            }\n        };\n\n        iframe.onerror = function() {\n            console.log(\"Something wrong happened\");\n        };\n\n        if (this.props['data-style']) {\n            iframe.style = this.props['data-style'];\n        }\n\n        if (this.props['data-iframe']) {\n            let iframeOptions = JSON.parse(this.props['data-iframe']);\n\n            // Remove any previous instances of same iframe if it's shown again\n            if (iframeOptions['one_per_chat'] && iframeOptions['one_per_chat'] == true && iframeOptions['iframe-identifier']) {\n                let sameIframes = document.getElementsByClassName(iframeOptions['iframe-identifier']);\n                for (let i = 0; i < sameIframes.length; i++) {\n                    if (sameIframes[i].parentNode) {\n                        updateMessageData({\n                            'id' : this.props.chatwidget.getIn(['chatData','id']),\n                            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n                            'msg_id' : sameIframes[i].getAttribute('data-msg-id')\n                        }, {'action' : 'iframe_close'}).then(() => {\n                            this.props.updateMessage(sameIframes[i].getAttribute('data-msg-id'));\n                            //sameIframes[i].parentNode.removeChild(sameIframes[i]); // Not needed anymore becase default flow handles all taht\n                        });\n                    }\n                }\n            }\n\n            if (iframeOptions['iframe-identifier']) {\n                iframe.className = iframeOptions['iframe-identifier']; // Will be used to allow only one instance to be mounted\n            }\n\n            iframe.setAttribute('data-msg-id',this.props['data-id']);\n        }\n\n        document.getElementById(\"iframe-msg-\"+this.props['data-id']).appendChild(iframe);\n    }\n\n\n    render() {\n\n        const { t } = this.props;\n\n        return (\n            <div id={\"iframe-msg-\"+this.props['data-id']}></div>\n        );\n    }\n}\n\nexport default InlineIframe;"],"names":["InlineIframe","connect","store","chatwidget","props","a","contentWindow","document","contentDocument","elmDomDoc","attr","elm","id","href","getElementById","d","getElementsByTagName","k","createDocumentFragment","e","createElement","b","rel","crossOrigin","appendChild","src","async","type","Object","keys","forEach","key","setAttribute","iframe","documentFrame","this","getDocument","innerHTML","html","nodeDoctype","implementation","createDocumentType","doctype","replaceChild","insertBefore","childNodes","JSON","parse","item","insertCssRemoteFile","insertJSFile","body","onload","prepareIframe","closeActions","getElementsByClassName","i","length","addEventListener","updateMessageData","getIn","then","updateMessage","elmScroll","scrollTop","scrollHeight","js","textContent","head","onerror","console","log","style","iframeOptions","sameIframes","parentNode","getAttribute","className","t","Component"],"sourceRoot":""}