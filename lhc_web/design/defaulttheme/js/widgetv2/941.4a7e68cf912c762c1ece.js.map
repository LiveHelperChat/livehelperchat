{"version":3,"file":"941.4a7e68cf912c762c1ece.js","mappings":"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","sources":["webpack://LHCReactAPP/./src/components/InlineIframe.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { updateMessageData } from \"../actions/chatActions\";\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass InlineIframe extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    getDocument(a) {\n        return a.contentWindow ? a.contentWindow.document : a.contentDocument ? a.contentDocument : a.document ? a.document : null\n    }\n\n    insertCssRemoteFile(elmDomDoc, attr) {\n\n        var elm = null;\n\n        if (attr.id && attr.href && (elm = elmDomDoc.getElementById(attr.id)) !== null) {\n            elm.href = attr.href\n            return;\n        }\n\n        var d = elmDomDoc.getElementsByTagName(\"head\")[0],\n            k = elmDomDoc.createDocumentFragment(),\n            e = elmDomDoc.createElement('link');\n\n        e.rel = \"stylesheet\";\n        e.crossOrigin = \"*\";\n\n        for (var b in attr) e[b] = attr[b];\n\n        k.appendChild(e);\n        d.appendChild(k);\n    }\n\n    insertJSFile(elmDomDoc, src, async, attr) {\n        var d = elmDomDoc.getElementsByTagName(\"head\")[0],\n            k = elmDomDoc.createDocumentFragment(),\n            e = elmDomDoc.createElement('script');\n\n        e.type = 'text/javascript';\n        if (typeof async === 'undefined' || async === true) {\n            e.async = true;\n        }\n\n        e.crossOrigin = \"*\";\n        e.src = src;\n\n        if (attr) {\n            delete attr['src'];\n            if (typeof attr['async'] !== 'undefined') {\n                delete attr['async'];\n            }\n            Object.keys(attr).forEach(key => {\n                e.setAttribute(key,attr[key]);\n            })\n        }\n\n        k.appendChild(e);\n        d.appendChild(k);\n    }\n\n    prepareIframe(iframe) {\n        let documentFrame = this.getDocument(iframe);\n\n        documentFrame.getElementsByTagName(\"head\")[0].innerHTML = '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />';\n\n        var html = documentFrame.getElementsByTagName(\"html\")[0];\n        html.setAttribute(\"lang\", 'en');\n        html.setAttribute(\"dir\", 'ltr');\n\n        var nodeDoctype = document.implementation.createDocumentType(\n            'html',\n            '',\n            ''\n        );\n\n        if (documentFrame.doctype) {\n            documentFrame.replaceChild(nodeDoctype, documentFrame.doctype);\n        } else {\n            documentFrame.insertBefore(nodeDoctype, documentFrame.childNodes[0]);\n        }\n\n        if (this.props['data-css']) {\n            JSON.parse(this.props['data-css']).forEach((item) => {\n                this.insertCssRemoteFile(documentFrame, item);\n            });\n        }\n\n        if (this.props['data-js']) {\n            JSON.parse(this.props['data-js']).forEach((item) => {\n                this.insertJSFile(documentFrame, item['src'], (item['async'] ? item['async'] : false), item);\n            });\n        }\n\n        documentFrame.body.innerHTML = this.props['data-body'];\n\n        return documentFrame;\n    }\n\n    prependURL() {\n\n        var js_args = [];\n\n        var paramsReturn = '?';\n        var jsVars = this.props.chatwidget.get('jsVars');\n\n        Object.keys(jsVars).forEach(key => {\n            js_args.push('jsvar[' + key + ']=' + encodeURIComponent(jsVars[key]));\n        })\n\n        if (js_args.length > 0) {\n            paramsReturn = paramsReturn + '&' + js_args.join('&');\n        }\n\n        if (this.props.chatwidget.hasIn(['chatData','id'])) {\n            paramsReturn = paramsReturn + '&chat_id=' + this.props.chatwidget.getIn(['chatData','id']) + '&hash=' + this.props.chatwidget.getIn(['chatData','hash']) + '&msg_id=' + this.props['data-id'];\n        }\n\n        return paramsReturn;\n    }\n\n    componentDidMount() {\n        const iframe = document.createElement(\"iframe\");\n\n        if (this.props['data-form']) {\n            iframe.src = this.props['data-form'] + this.prependURL();\n        }\n\n        iframe.onload = () => {\n\n            if (!this.props['data-form']) {\n                let documentFrame = this.prepareIframe(iframe);\n\n                var closeActions = documentFrame.body.getElementsByClassName('lhc-iframe-close');\n\n                for (let i = 0; i < closeActions.length; i++) {\n                    closeActions[i].addEventListener('click',() => {\n                        updateMessageData({\n                            'id' : this.props.chatwidget.getIn(['chatData','id']),\n                            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n                            'msg_id' : this.props['data-id']\n                        }, {'action' : 'iframe_close'}).then(() => {\n                            this.props.updateMessage(this.props['data-id']);\n                        });\n                    });\n                }\n            }\n\n            let elmScroll = document.getElementById('messages-scroll');\n            if (elmScroll !== null) {\n                elmScroll.scrollTop = elmScroll.scrollHeight + 1000;\n            }\n\n            if (!this.props['data-form'] && this.props['data-js-body']) {\n                let js = documentFrame.createElement(\"script\");\n                js.textContent = this.props['data-js-body'];\n                documentFrame.head.appendChild(js);\n            }\n        };\n\n        iframe.onerror = function() {\n            console.log(\"Something wrong happened\");\n        };\n\n        if (this.props['data-style']) {\n            iframe.style = this.props['data-style'];\n        }\n\n        if (this.props['data-iframe']) {\n            let iframeOptions = JSON.parse(this.props['data-iframe']);\n\n            // Remove any previous instances of same iframe if it's shown again\n            if (iframeOptions['one_per_chat'] && iframeOptions['one_per_chat'] == true && iframeOptions['iframe-identifier']) {\n                let sameIframes = document.getElementsByClassName(iframeOptions['iframe-identifier']);\n                for (let i = 0; i < sameIframes.length; i++) {\n                    if (sameIframes[i].parentNode) {\n                        updateMessageData({\n                            'id' : this.props.chatwidget.getIn(['chatData','id']),\n                            'hash' : this.props.chatwidget.getIn(['chatData','hash']),\n                            'msg_id' : sameIframes[i].getAttribute('data-msg-id')\n                        }, {'action' : 'iframe_close'}).then(() => {\n                            this.props.updateMessage(sameIframes[i].getAttribute('data-msg-id'));\n                            //sameIframes[i].parentNode.removeChild(sameIframes[i]); // Not needed anymore becase default flow handles all taht\n                        });\n                    }\n                }\n            }\n\n            if (iframeOptions['iframe-identifier']) {\n                iframe.className = iframeOptions['iframe-identifier']; // Will be used to allow only one instance to be mounted\n            }\n\n            iframe.setAttribute('data-msg-id',this.props['data-id']);\n        }\n\n        document.getElementById(\"iframe-msg-\"+this.props['data-id']).appendChild(iframe);\n    }\n\n\n    render() {\n\n        const { t } = this.props;\n\n        return (\n            <div id={\"iframe-msg-\"+this.props['data-id']}></div>\n        );\n    }\n}\n\nexport default InlineIframe;"],"names":["InlineIframe","connect","store","chatwidget","_dec","_class","_Component","props","_classCallCheck","_inherits","_createClass","key","value","a","contentWindow","document","contentDocument","elmDomDoc","attr","elm","id","href","getElementById","d","getElementsByTagName","k","createDocumentFragment","e","createElement","b","rel","crossOrigin","appendChild","src","async","type","Object","keys","forEach","setAttribute","iframe","_this","documentFrame","this","getDocument","innerHTML","html","nodeDoctype","implementation","createDocumentType","doctype","replaceChild","insertBefore","childNodes","JSON","parse","item","insertCssRemoteFile","insertJSFile","body","js_args","paramsReturn","jsVars","get","push","encodeURIComponent","length","join","hasIn","getIn","_this2","prependURL","onload","closeActions","prepareIframe","getElementsByClassName","i","addEventListener","updateMessageData","then","updateMessage","elmScroll","scrollTop","scrollHeight","js","textContent","head","onerror","console","log","style","iframeOptions","sameIframes","_loop","parentNode","getAttribute","className","t","React","Component"],"sourceRoot":""}