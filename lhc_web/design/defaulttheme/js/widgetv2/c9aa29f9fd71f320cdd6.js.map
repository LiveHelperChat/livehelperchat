{"version":3,"file":"c9aa29f9fd71f320cdd6.js","mappings":"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","sources":["webpack://LiveHelperChat/./src/util/proactiveChat.js"],"sourcesContent":["import {helperFunctions} from '../lib/helperFunctions';\nimport {domEventsHandler} from '../util/domEventsHandler';\n\nclass _proactiveChat {\n\n    constructor() {\n        this.params = {};\n        this.timeoutStatuscheck = null;\n        this.timeoutActivity = null;\n        this.attributes = null;\n        this.chatEvents = null;\n        this.dynamicInvitations = [];\n\n        this.iddleTimeoutActivity = null;\n        this.checkMessageTimeout = null;\n        this.nextRescheduleTimeout = null;\n        this.initCall = true;\n        this.inProgress = false;\n    }\n\n    setParams(params, attributes, chatEvents) {\n        this.params = params;\n        this.attributes = attributes;\n        this.chatEvents = chatEvents;\n\n        if (this.attributes.events.length > 0) {\n            this.storeEvents(this.attributes.events);\n        } else {\n            this.initInvitation();\n        }\n\n        if (this.attributes.conversion != '') {\n            this.storeConversion(this.attributes.conversion);\n        }\n\n        // check invitaiton then tag is added\n        this.attributes.eventEmitter.addListener('tagAdded', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('eventAdded', () => {\n            this.storeEvents(this.attributes.events);\n        });\n\n        this.attributes.eventEmitter.addListener('conversionAdded', () => {\n            this.storeConversion(this.attributes.conversion);\n        });\n\n        this.attributes.eventEmitter.addListener('checkMessageOperator', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('endChat', () => {\n             this.initInvitation({init: 0});\n        });\n\n        this.attributes.onlineStatus.subscribe((data) => {\n            if (data == true) {\n                this.initInvitation({init: 0});\n            } else {\n                const chatParams = this.attributes['userSession'].getSessionAttributes();\n                if (!chatParams['id'] && this.attributes.proactive.invitation) {\n                    this.attributes.proactive = {};\n                    if (this.attributes.mainWidget.isLoaded !== false) {\n                        this.chatEvents.sendChildEvent('proactive', [{}]);\n                    }\n                    this.attributes.mainWidget.hideInvitation();\n                    this.attributes.eventEmitter.emitEvent('closeWidget', [{'sender' : 'closeButton'}]);\n                }\n            }\n        });\n    }\n\n    showInvitation(params, init) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        // Show invitation only if widget is not open\n        if ((init === 0 && (this.attributes.widgetStatus.value === true && !this.attributes.mode == 'embed')) || chatParams['id']) {\n            return;\n        }\n\n        if (params.inject_html && params.invitation) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src', this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/htmlsnippet/'+params.invitation+'/inv/0/?ts='+Date.now());\n            th.appendChild(s);\n        }\n\n        if (!params.only_inject) {\n            this.attributes.proactive = params;\n\n            if (this.attributes.mainWidget.isLoaded === false) {\n                this.attributes.mainWidget.bootstrap();\n            } else {\n                this.chatEvents.sendChildEvent('proactive', [params]);\n            }\n\n            clearTimeout(this.checkMessageTimeout);\n            clearTimeout(this.nextRescheduleTimeout);\n        }\n    }\n\n    storeEvents(events) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/logevent/(vid)/' + this.attributes.userSession.getVID(), {params: {'data' : JSON.stringify(events)}}, (data) => {\n                this.initInvitation({init: 0});\n            })\n        }\n    }\n\n    storeConversion(conversion) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/logconversions/(vid)/' + this.attributes.userSession.getVID(), {params: {'data' : JSON.stringify(conversion)}}, (data) => {\n\n            });\n        }\n    }\n\n    initInvitation(paramsExecution) {\n\n        if (this.inProgress == true) {\n            return ;\n        }\n\n        clearTimeout(this.checkMessageTimeout);\n\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        const init = (paramsExecution && paramsExecution['init'] === 0) ? 0 : 1;\n\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n\n            this.inProgress = true;\n\n            let params = {\n                'vid': this.attributes.userSession.getVID(),\n                'dep': this.attributes.department.join(',')\n            };\n\n            if (this.attributes.LHC_API.args.priority) {\n                params['priority'] = this.attributes.LHC_API.args.priority;\n            }\n\n            if (this.attributes.LHC_API.args.operator) {\n                params['operator'] = this.attributes.LHC_API.args.operator;\n            }\n\n            if (this.attributes['identifier']) {\n                params['idnt'] = this.attributes['identifier']\n            }\n\n            if (this.attributes['tag']) {\n                params['tag'] = this.attributes['tag']\n            }\n\n            if (this.attributes['langOverride']) {\n                params['lang'] = this.attributes['langOverride']\n            }\n\n            params['l'] = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            params['dt'] = encodeURIComponent(document.title);\n            params['init'] = this.initCall == true ? 1 : init;\n\n            this.initCall = false;\n\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/checkinvitation', {params: params}, (data) => {\n\n                this.inProgress = false;\n                \n                if (data.invitation) {\n                    const params = {'vid_id' : data.vid_id, 'invitation' : data.invitation, 'inject_html' :  data.inject_html, 'qinv' : data.qinv};\n                    setTimeout(() => {\n                        this.showInvitation(params, init);\n                    }, this.attributes.widgetStatus.value === true ? 0 : (data.delay ? data.delay + this.attributes['status_delay'] : this.attributes['status_delay']));\n                } else {\n                    if (this.attributes.LHC_API.args.check_messages) {\n                        this.checkMessageTimeout = setTimeout(() => {\n                            this.initInvitation({init: 0});\n                        },this.params['interval'] * 1000);\n                    }\n                }\n\n                if (data.next_reschedule) {\n                    this.nextRescheduleTimeout = setTimeout(() => {\n                        this.initInvitation({init: 0});\n                    }, data.next_reschedule);\n                }\n\n                if (data.dynamic) {\n                    data.dynamic.forEach((item) => {\n                        this.dynamicInvitations.push(item.id);\n                        if (item.type === 1) {\n                            domEventsHandler.listen(document, 'mouseout', (e) => {\n                                e = e ? e : window.event;\n                                var from = e.relatedTarget || e.toElement;\n                                if (!from || from.nodeName == \"HTML\") {\n                                    this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n                                    if (!item.every_time) {\n                                        domEventsHandler.unlisten('lhc_inv_mouse_out_'+item.id);\n                                    }\n                                }\n                            }, 'lhc_inv_mouse_out_' + item.id);\n                        } else if (item.type === 2) {\n\n                            var iddleTimeout = () => {\n\n                                this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n\n                                clearTimeout(this.iddleTimeoutActivity);\n\n                                if (!item.every_time) {\n                                    ['mousemove','mousedown','click','scroll','keypress','load'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_win_'+element);\n                                    });\n\n                                    ['mousemove','scroll','touchstart','touchend'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_doc_'+element);\n                                    });\n                                }\n                            };\n\n                            this.iddleTimeoutActivityReset = () => {\n                                clearTimeout(this.iddleTimeoutActivity);\n                                this.iddleTimeoutActivity = setTimeout( () => { iddleTimeout(); }, item.iddle_for *1000);\n                            }\n\n                            this.iddleTimeoutActivityReset();\n\n                            ['mousemove','mousedown','click','scroll','keypress','load'].forEach((event) => {\n                                    domEventsHandler.listen(window, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_win_'+event);\n                            });\n\n                            ['mousemove','scroll','touchstart','touchend'].forEach((event) => {\n                                domEventsHandler.listen(document, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_doc_'+event);\n                            });\n                        }\n                    })\n                }\n            });\n        }\n    }\n}\n\nconst proactiveChat = new _proactiveChat();\nexport {proactiveChat};\n\n"],"names":["proactiveChat","_proactiveChat","this","params","timeoutStatuscheck","timeoutActivity","attributes","chatEvents","dynamicInvitations","iddleTimeoutActivity","checkMessageTimeout","nextRescheduleTimeout","initCall","inProgress","events","length","storeEvents","initInvitation","conversion","storeConversion","eventEmitter","addListener","init","onlineStatus","subscribe","data","getSessionAttributes","proactive","invitation","mainWidget","isLoaded","sendChildEvent","hideInvitation","emitEvent","chatParams","widgetStatus","value","mode","inject_html","th","document","getElementsByTagName","s","createElement","setAttribute","LHC_API","args","lhc_base_url","Date","now","appendChild","only_inject","bootstrap","clearTimeout","helperFunctions","userSession","getVID","JSON","stringify","paramsExecution","department","join","priority","operator","encodeURIComponent","window","location","href","substring","protocol","title","vid_id","qinv","setTimeout","showInvitation","delay","check_messages","next_reschedule","dynamic","forEach","item","push","id","type","domEventsHandler","e","from","event","relatedTarget","toElement","nodeName","every_time","iddleTimeoutActivityReset","element","iddle_for"],"sourceRoot":""}